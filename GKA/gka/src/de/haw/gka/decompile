{beam_file,adtgraph,
    [{addEdge,3,22},
     {addVertex,2,14},
     {createG,1,2},
     {deleteEdge,3,16},
     {deleteVertex,2,7},
     {exportG,2,69},
     {getAdjacent,2,50},
     {getEdges,1,61},
     {getIncident,2,43},
     {getSource,2,56},
     {getTarget,2,53},
     {getValE,4,39},
     {getValV,3,41},
     {getVertices,1,59},
     {importG,2,63},
     {minmaxGrad,1,327},
     {module_info,0,345},
     {module_info,1,347},
     {printG,2,75},
     {printGFF,2,94},
     {setAtE,5,31},
     {setAtV,4,37}],
    [{vsn,[270353210873414004178603295091204267668]}],
    [{options,[error_summary]},
     {version,"7.0.3"},
     {source,
         "c:/Users/Christoph Klauck/Documents/Lehre/GKA/Praktikum/WS20192020/Aufgaben/aufg1SRC/adtgraph.erl"}],
    [{function,createG,1,2,
         [{label,1},
          {line,1},
          {func_info,{atom,adtgraph},{atom,createG},1},
          {label,2},
          {allocate,1,1},
          {move,{x,0},{y,0}},
          {move,{atom,directed},{x,1}},
          {move,{atom,yndirected},{x,0}},
          {line,2},
          {call_ext,2,{extfunc,util,setglobalvar,2}},
          {test,is_atom,{f,4},[{y,0}]},
          {select_val,{y,0},{f,4},{list,[{atom,d},{f,5},{atom,ud},{f,3}]}},
          {label,3},
          {move,{atom,nondirected},{x,1}},
          {init,{y,0}},
          {move,{atom,yndirected},{x,0}},
          {line,3},
          {call_ext,2,{extfunc,util,setglobalvar,2}},
          {jump,{f,5}},
          {label,4},
          {init,{y,0}},
          {move,
              {literal,
                  "***Falsche Initialisierung eines Graphen - per default gerichtet ***\n"},
              {x,0}},
          {line,4},
          {call_ext,1,{extfunc,io,format,1}},
          {label,5},
          {trim,1,0},
          {line,5},
          {call,0,{adtgraph,initBT,0}},
          {test_heap,4,1},
          {put_tuple,3,{x,1}},
          {put,{x,0}},
          {put,nil},
          {put,nil},
          {move,{x,1},{x,0}},
          {deallocate,0},
          return]},
     {function,deleteVertex,2,7,
         [{line,6},
          {label,6},
          {func_info,{atom,adtgraph},{atom,deleteVertex},2},
          {label,7},
          {test,is_tuple,{f,6},[{x,0}]},
          {test,test_arity,{f,6},[{x,0},3]},
          {allocate,5,2},
          {init,{y,0}},
          {get_tuple_element,{x,0},1,{y,4}},
          {get_tuple_element,{x,0},2,{y,1}},
          {get_tuple_element,{x,0},0,{x,0}},
          {move,{x,0},{y,2}},
          {move,{x,1},{y,3}},
          {line,7},
          {call,2,{adtgraph,findBT,2}},
          {move,{x,0},{y,0}},
          {line,8},
          {call,1,{adtgraph,getTarget,1}},
          {test_heap,4,1},
          {put_tuple,3,{x,3}},
          {put,{y,2}},
          {put,{y,4}},
          {put,{y,1}},
          {move,{y,3},{x,1}},
          {move,{x,0},{x,2}},
          {init,{y,1}},
          {init,{y,2}},
          {move,{x,3},{x,0}},
          {line,8},
          {call,3,{adtgraph,delSTEdges,3}},
          {move,{x,0},{y,2}},
          {move,{atom,yndirected},{x,0}},
          {line,9},
          {call_ext,1,{extfunc,util,getglobalvar,1}},
          {test,is_atom,{f,11},[{x,0}]},
          {select_val,
              {x,0},
              {f,11},
              {list,[{atom,directed},{f,8},{atom,nondirected},{f,9}]}},
          {label,8},
          {move,{y,0},{x,0}},
          {init,{y,0}},
          {line,10},
          {call,1,{adtgraph,getSource,1}},
          {move,{y,3},{x,1}},
          {move,{x,0},{x,2}},
          {move,{y,2},{x,0}},
          {init,{y,2}},
          {line,10},
          {call,3,{adtgraph,delTSEdges,3}},
          {move,{x,0},{x,1}},
          {jump,{f,10}},
          {label,9},
          {move,{y,2},{x,1}},
          {label,10},
          {test,is_tuple,{f,12},[{x,1}]},
          {test,test_arity,{f,12},[{x,1},3]},
          {get_tuple_element,{x,1},0,{x,0}},
          {get_tuple_element,{x,1},1,{x,2}},
          {test,is_eq_exact,{f,12},[{x,2},{y,4}]},
          {get_tuple_element,{x,1},2,{y,2}},
          {move,{y,3},{x,1}},
          {trim,2,3},
          {line,11},
          {call,2,{adtgraph,deleteBT,2}},
          {move,{x,0},{x,2}},
          {move,{y,2},{x,1}},
          {move,{y,1},{x,0}},
          {move,{x,2},{y,2}},
          {init,{y,1}},
          {line,11},
          {call,2,{adtgraph,delSL,2}},
          {test_heap,4,1},
          {put_tuple,3,{x,1}},
          {put,{y,2}},
          {put,{x,0}},
          {put,{y,0}},
          {move,{x,1},{x,0}},
          {deallocate,3},
          return,
          {label,11},
          {line,9},
          {case_end,{x,0}},
          {label,12},
          {line,12},
          {badmatch,{x,1}}]},
     {function,addVertex,2,14,
         [{line,13},
          {label,13},
          {func_info,{atom,adtgraph},{atom,addVertex},2},
          {label,14},
          {test,is_tuple,{f,13},[{x,0}]},
          {test,test_arity,{f,13},[{x,0},3]},
          {allocate,4,2},
          {get_tuple_element,{x,0},0,{y,0}},
          {get_tuple_element,{x,0},1,{y,2}},
          {get_tuple_element,{x,0},2,{y,3}},
          {move,{x,1},{y,1}},
          {line,14},
          {call,0,{adtgraph,initVTS,0}},
          {move,{y,1},{x,1}},
          {move,{x,0},{x,2}},
          {move,{y,0},{x,0}},
          {trim,1,3},
          {line,14},
          {call,3,{adtgraph,insertBT,3}},
          {move,{x,0},{x,2}},
          {move,{y,1},{x,1}},
          {move,{y,0},{x,0}},
          {move,{x,2},{y,1}},
          {trim,1,2},
          {line,14},
          {call,2,{adtgraph,putSL,2}},
          {test_heap,4,1},
          {put_tuple,3,{x,1}},
          {put,{y,0}},
          {put,{x,0}},
          {put,{y,1}},
          {move,{x,1},{x,0}},
          {deallocate,2},
          return]},
     {function,deleteEdge,3,16,
         [{line,15},
          {label,15},
          {func_info,{atom,adtgraph},{atom,deleteEdge},3},
          {label,16},
          {test,is_tuple,{f,15},[{x,0}]},
          {test,test_arity,{f,15},[{x,0},3]},
          {allocate,7,3},
          {init,{y,0}},
          {init,{y,1}},
          {get_tuple_element,{x,0},1,{y,6}},
          {get_tuple_element,{x,0},2,{y,2}},
          {get_tuple_element,{x,0},0,{x,0}},
          {move,{x,1},{y,3}},
          {move,{x,0},{y,4}},
          {move,{x,2},{y,5}},
          {line,16},
          {call,2,{adtgraph,findBT,2}},
          {move,{x,0},{x,1}},
          {move,{y,5},{x,0}},
          {line,16},
          {call,2,{adtgraph,del_target,2}},
          {test_heap,2,1},
          {put_tuple,1,{x,2}},
          {put,{y,5}},
          {move,{x,0},{x,1}},
          {move,{x,2},{x,0}},
          {line,16},
          {call,2,{adtgraph,del_stattr,2}},
          {move,{x,0},{y,1}},
          {move,{y,5},{x,1}},
          {move,{y,4},{x,0}},
          {line,17},
          {call,2,{adtgraph,findBT,2}},
          {move,{x,0},{x,1}},
          {move,{y,3},{x,0}},
          {line,17},
          {call,2,{adtgraph,del_source,2}},
          {move,{x,0},{y,0}},
          {move,{atom,yndirected},{x,0}},
          {line,18},
          {call_ext,1,{extfunc,util,getglobalvar,1}},
          {test,is_atom,{f,20},[{x,0}]},
          {select_val,
              {x,0},
              {f,20},
              {list,[{atom,nondirected},{f,17},{atom,directed},{f,18}]}},
          {label,17},
          {move,{y,1},{x,1}},
          {init,{y,1}},
          {move,{y,5},{x,0}},
          {line,19},
          {call,2,{adtgraph,del_source,2}},
          {move,{x,0},{y,1}},
          {move,{y,0},{x,1}},
          {init,{y,0}},
          {move,{y,3},{x,0}},
          {line,20},
          {call,2,{adtgraph,del_target,2}},
          {test_heap,2,1},
          {put_tuple,1,{x,2}},
          {put,{y,3}},
          {move,{x,0},{x,1}},
          {move,{x,2},{x,0}},
          {line,20},
          {call,2,{adtgraph,del_stattr,2}},
          {move,{x,0},{x,3}},
          {move,{y,3},{x,1}},
          {move,{y,5},{x,2}},
          {move,{y,2},{x,0}},
          {move,{x,3},{y,2}},
          {line,21},
          {call,3,{adtgraph,delEdgeList,3}},
          {move,{y,3},{x,2}},
          {move,{y,5},{x,1}},
          {line,21},
          {call,3,{adtgraph,delEdgeList,3}},
          {move,{y,1},{x,2}},
          {move,{y,2},{x,3}},
          {move,{x,0},{x,1}},
          {jump,{f,19}},
          {label,18},
          {move,{y,3},{x,1}},
          {move,{y,5},{x,2}},
          {move,{y,2},{x,0}},
          {init,{y,2}},
          {line,22},
          {call,3,{adtgraph,delEdgeList,3}},
          {move,{y,1},{x,2}},
          {move,{y,0},{x,3}},
          {move,{x,0},{x,1}},
          {label,19},
          {move,{x,1},{x,4}},
          {move,{y,3},{x,1}},
          {move,{y,4},{x,0}},
          {move,{x,3},{y,3}},
          {move,{x,4},{y,4}},
          {trim,3,4},
          {line,23},
          {call,3,{adtgraph,insertOVBT,3}},
          {move,{y,0},{x,2}},
          {move,{y,2},{x,1}},
          {init,{y,2}},
          {trim,1,3},
          {line,23},
          {call,3,{adtgraph,insertOVBT,3}},
          {test_heap,4,1},
          {put_tuple,3,{x,1}},
          {put,{x,0}},
          {put,{y,2}},
          {put,{y,0}},
          {move,{x,1},{x,0}},
          {deallocate,3},
          return,
          {label,20},
          {line,18},
          {case_end,{x,0}}]},
     {function,addEdge,3,22,
         [{line,24},
          {label,21},
          {func_info,{atom,adtgraph},{atom,addEdge},3},
          {label,22},
          {test,is_tuple,{f,21},[{x,0}]},
          {test,test_arity,{f,21},[{x,0},3]},
          {allocate,5,3},
          {get_tuple_element,{x,0},1,{y,3}},
          {get_tuple_element,{x,0},2,{y,2}},
          {get_tuple_element,{x,0},0,{x,0}},
          {move,{x,2},{y,0}},
          {move,{x,1},{y,1}},
          {move,{x,0},{y,4}},
          {line,25},
          {call,2,{adtgraph,getTarget,2}},
          {move,{x,0},{x,1}},
          {move,{y,0},{x,0}},
          {line,25},
          {call_ext,2,{extfunc,lists,member,2}},
          {test,is_atom,{f,29},[{x,0}]},
          {select_val,
              {x,0},
              {f,29},
              {list,[{atom,true},{f,23},{atom,false},{f,24}]}},
          {label,23},
          {test_heap,4,0},
          {put_tuple,3,{x,0}},
          {put,{y,4}},
          {put,{y,3}},
          {put,{y,2}},
          {deallocate,5},
          return,
          {label,24},
          {move,{atom,yndirected},{x,0}},
          {line,26},
          {call_ext,1,{extfunc,util,getglobalvar,1}},
          {test,is_atom,{f,28},[{x,0}]},
          {select_val,
              {x,0},
              {f,28},
              {list,[{atom,nondirected},{f,25},{atom,directed},{f,26}]}},
          {label,25},
          {move,{y,0},{x,1}},
          {move,{y,1},{x,0}},
          {line,27},
          {call,2,{adtgraph,createEdgeA,2}},
          {move,{y,1},{x,1}},
          {move,{x,0},{x,2}},
          {move,{y,4},{x,0}},
          {init,{y,4}},
          {line,27},
          {call,3,{adtgraph,insertBT,3}},
          {move,{x,0},{y,4}},
          {move,{y,0},{x,1}},
          {move,{y,1},{x,0}},
          {line,28},
          {call,2,{adtgraph,createEdgeB,2}},
          {move,{y,0},{x,1}},
          {move,{x,0},{x,2}},
          {move,{y,4},{x,0}},
          {init,{y,4}},
          {line,28},
          {call,3,{adtgraph,insertBT,3}},
          {move,{x,0},{x,1}},
          {jump,{f,27}},
          {label,26},
          {move,{y,0},{x,1}},
          {move,{y,1},{x,0}},
          {line,29},
          {call,2,{adtgraph,createEdgeA,2}},
          {move,{y,1},{x,1}},
          {move,{x,0},{x,2}},
          {move,{y,4},{x,0}},
          {init,{y,4}},
          {line,29},
          {call,3,{adtgraph,insertBT,3}},
          {move,{x,0},{y,4}},
          {move,{y,0},{x,1}},
          {move,{y,1},{x,0}},
          {line,30},
          {call,2,{adtgraph,createEdgeB,2}},
          {move,{y,0},{x,1}},
          {move,{x,0},{x,2}},
          {move,{y,4},{x,0}},
          {init,{y,4}},
          {line,30},
          {call,3,{adtgraph,insertBT,3}},
          {move,{x,0},{x,1}},
          {label,27},
          {move,{x,1},{y,4}},
          {move,{y,3},{x,1}},
          {init,{y,3}},
          {move,{y,0},{x,0}},
          {line,31},
          {call,2,{adtgraph,putSL,2}},
          {move,{x,0},{x,1}},
          {move,{y,1},{x,0}},
          {line,31},
          {call,2,{adtgraph,putSL,2}},
          {move,{x,0},{y,3}},
          {move,{y,0},{x,1}},
          {move,{y,2},{x,2}},
          {move,{y,1},{x,0}},
          {trim,3,2},
          {line,31},
          {call,3,{adtgraph,putEdgeList,3}},
          {test_heap,4,1},
          {put_tuple,3,{x,1}},
          {put,{y,1}},
          {put,{y,0}},
          {put,{x,0}},
          {move,{x,1},{x,0}},
          {deallocate,2},
          return,
          {label,28},
          {line,26},
          {case_end,{x,0}},
          {label,29},
          {line,25},
          {case_end,{x,0}}]},
     {function,setAtE,5,31,
         [{line,32},
          {label,30},
          {func_info,{atom,adtgraph},{atom,setAtE},5},
          {label,31},
          {test,is_tuple,{f,30},[{x,0}]},
          {test,test_arity,{f,30},[{x,0},3]},
          {allocate,8,5},
          {init,{y,0}},
          {get_tuple_element,{x,0},1,{y,7}},
          {get_tuple_element,{x,0},2,{y,6}},
          {get_tuple_element,{x,0},0,{x,0}},
          {move,{x,4},{y,1}},
          {move,{x,3},{y,2}},
          {move,{x,2},{y,3}},
          {move,{x,1},{y,4}},
          {move,{x,0},{y,5}},
          {line,33},
          {call,2,{adtgraph,findBT,2}},
          {test_heap,4,1},
          {put_tuple,3,{x,2}},
          {put,{y,3}},
          {put,{y,2}},
          {put,{y,1}},
          {move,{x,0},{x,1}},
          {move,{x,2},{x,0}},
          {line,33},
          {call,2,{adtgraph,ins_stattr,2}},
          {move,{x,0},{y,0}},
          {move,{atom,yndirected},{x,0}},
          {line,34},
          {call_ext,1,{extfunc,util,getglobalvar,1}},
          {test,is_atom,{f,35},[{x,0}]},
          {select_val,
              {x,0},
              {f,35},
              {list,[{atom,nondirected},{f,32},{atom,directed},{f,33}]}},
          {label,32},
          {move,{y,3},{x,1}},
          {move,{y,5},{x,0}},
          {line,35},
          {call,2,{adtgraph,findBT,2}},
          {test_heap,4,1},
          {put_tuple,3,{x,2}},
          {put,{y,4}},
          {put,{y,2}},
          {put,{y,1}},
          {move,{x,0},{x,1}},
          {init,{y,1}},
          {init,{y,2}},
          {move,{x,2},{x,0}},
          {line,35},
          {call,2,{adtgraph,ins_stattr,2}},
          {move,{x,0},{x,3}},
          {move,{y,4},{x,1}},
          {move,{y,0},{x,2}},
          {move,{y,5},{x,0}},
          {move,{x,3},{y,5}},
          {init,{y,0}},
          {init,{y,4}},
          {line,36},
          {call,3,{adtgraph,insertBT,3}},
          {move,{y,5},{x,2}},
          {move,{y,3},{x,1}},
          {init,{y,3}},
          {init,{y,5}},
          {line,36},
          {call,3,{adtgraph,insertBT,3}},
          {move,{x,0},{x,1}},
          {jump,{f,34}},
          {label,33},
          {move,{y,4},{x,1}},
          {move,{y,0},{x,2}},
          {move,{y,5},{x,0}},
          {init,{y,0}},
          {init,{y,1}},
          {init,{y,2}},
          {init,{y,3}},
          {init,{y,4}},
          {init,{y,5}},
          {line,37},
          {call,3,{adtgraph,insertBT,3}},
          {move,{x,0},{x,1}},
          {label,34},
          {test_heap,4,2},
          {put_tuple,3,{x,0}},
          {put,{x,1}},
          {put,{y,7}},
          {put,{y,6}},
          {deallocate,8},
          return,
          {label,35},
          {line,34},
          {case_end,{x,0}}]},
     {function,setAtV,4,37,
         [{line,38},
          {label,36},
          {func_info,{atom,adtgraph},{atom,setAtV},4},
          {label,37},
          {test,is_tuple,{f,36},[{x,0}]},
          {test,test_arity,{f,36},[{x,0},3]},
          {allocate,6,4},
          {get_tuple_element,{x,0},1,{y,5}},
          {get_tuple_element,{x,0},2,{y,4}},
          {get_tuple_element,{x,0},0,{x,0}},
          {move,{x,3},{y,0}},
          {move,{x,2},{y,1}},
          {move,{x,1},{y,2}},
          {move,{x,0},{y,3}},
          {line,39},
          {call,2,{adtgraph,findBT,2}},
          {test_heap,3,1},
          {put_tuple,2,{x,2}},
          {put,{y,1}},
          {put,{y,0}},
          {move,{x,0},{x,1}},
          {trim,2,4},
          {move,{x,2},{x,0}},
          {line,39},
          {call,2,{adtgraph,ins_vattr,2}},
          {move,{y,0},{x,1}},
          {move,{x,0},{x,2}},
          {move,{y,1},{x,0}},
          {trim,2,2},
          {line,39},
          {call,3,{adtgraph,insertBT,3}},
          {test_heap,4,1},
          {put_tuple,3,{x,1}},
          {put,{x,0}},
          {put,{y,1}},
          {put,{y,0}},
          {move,{x,1},{x,0}},
          {deallocate,2},
          return]},
     {function,getValE,4,39,
         [{line,40},
          {label,38},
          {func_info,{atom,adtgraph},{atom,getValE},4},
          {label,39},
          {test,is_tuple,{f,38},[{x,0}]},
          {test,test_arity,{f,38},[{x,0},3]},
          {allocate,2,4},
          {get_tuple_element,{x,0},0,{x,0}},
          {move,{x,3},{y,0}},
          {move,{x,2},{y,1}},
          {line,41},
          {call,2,{adtgraph,findBT,2}},
          {move,{y,0},{x,1}},
          {move,{x,0},{x,2}},
          {move,{y,1},{x,0}},
          {call_last,3,{adtgraph,get_stattr,3},2}]},
     {function,getValV,3,41,
         [{line,42},
          {label,40},
          {func_info,{atom,adtgraph},{atom,getValV},3},
          {label,41},
          {test,is_tuple,{f,40},[{x,0}]},
          {test,test_arity,{f,40},[{x,0},3]},
          {allocate,1,3},
          {get_tuple_element,{x,0},0,{x,0}},
          {move,{x,2},{y,0}},
          {line,43},
          {call,2,{adtgraph,findBT,2}},
          {move,{x,0},{x,1}},
          {move,{y,0},{x,0}},
          {call_last,2,{adtgraph,get_vattr,2},1}]},
     {function,getIncident,2,43,
         [{line,44},
          {label,42},
          {func_info,{atom,adtgraph},{atom,getIncident},2},
          {label,43},
          {test,is_tuple,{f,42},[{x,0}]},
          {test,test_arity,{f,42},[{x,0},3]},
          {allocate_zero,3,2},
          {get_tuple_element,{x,0},0,{x,0}},
          {move,{x,1},{y,2}},
          {line,45},
          {call,2,{adtgraph,findBT,2}},
          {test,is_tuple,{f,48},[{x,0}]},
          {test,test_arity,{f,48},[{x,0},4]},
          {get_tuple_element,{x,0},0,{y,0}},
          {get_tuple_element,{x,0},1,{y,1}},
          {move,{atom,yndirected},{x,0}},
          {line,46},
          {call_ext,1,{extfunc,util,getglobalvar,1}},
          {test,is_atom,{f,47},[{x,0}]},
          {select_val,
              {x,0},
              {f,47},
              {list,[{atom,directed},{f,44},{atom,nondirected},{f,45}]}},
          {label,44},
          {move,{y,0},{x,1}},
          {jump,{f,46}},
          {label,45},
          {move,{y,0},{x,1}},
          {init,{y,0}},
          {move,{y,1},{x,0}},
          {line,47},
          {call,2,{adtgraph,delSL,2}},
          {move,{x,0},{x,1}},
          {label,46},
          {move,{y,1},{x,2}},
          {move,{y,2},{x,0}},
          {call_last,3,{adtgraph,createAllEdges,3},3},
          {label,47},
          {line,46},
          {case_end,{x,0}},
          {label,48},
          {line,45},
          {badmatch,{x,0}}]},
     {function,getAdjacent,2,50,
         [{line,48},
          {label,49},
          {func_info,{atom,adtgraph},{atom,getAdjacent},2},
          {label,50},
          {test,is_tuple,{f,49},[{x,0}]},
          {test,test_arity,{f,49},[{x,0},3]},
          {allocate,0,2},
          {get_tuple_element,{x,0},0,{x,0}},
          {line,49},
          {call,2,{adtgraph,findBT,2}},
          {test,is_tuple,{f,51},[{x,0}]},
          {test,test_arity,{f,51},[{x,0},4]},
          {get_tuple_element,{x,0},1,{x,1}},
          {get_tuple_element,{x,0},0,{x,0}},
          {call_last,2,{adtgraph,putSL,2},0},
          {label,51},
          {line,49},
          {badmatch,{x,0}}]},
     {function,getTarget,2,53,
         [{line,50},
          {label,52},
          {func_info,{atom,adtgraph},{atom,getTarget},2},
          {label,53},
          {test,is_tuple,{f,54},[{x,0}]},
          {test,test_arity,{f,54},[{x,0},3]},
          {get_tuple_element,{x,0},0,{x,0}},
          {call_only,2,{adtgraph,getTarget,2}},
          {label,54},
          {allocate,0,2},
          {line,51},
          {call,2,{adtgraph,findBT,2}},
          {call_last,1,{adtgraph,get_target,1},0}]},
     {function,getSource,2,56,
         [{line,52},
          {label,55},
          {func_info,{atom,adtgraph},{atom,getSource},2},
          {label,56},
          {test,is_tuple,{f,57},[{x,0}]},
          {test,test_arity,{f,57},[{x,0},3]},
          {get_tuple_element,{x,0},0,{x,0}},
          {call_only,2,{adtgraph,getSource,2}},
          {label,57},
          {allocate,0,2},
          {line,53},
          {call,2,{adtgraph,findBT,2}},
          {call_last,1,{adtgraph,get_source,1},0}]},
     {function,getVertices,1,59,
         [{line,54},
          {label,58},
          {func_info,{atom,adtgraph},{atom,getVertices},1},
          {label,59},
          {test,is_tuple,{f,58},[{x,0}]},
          {test,test_arity,{f,58},[{x,0},3]},
          {get_tuple_element,{x,0},1,{x,0}},
          return]},
     {function,getEdges,1,61,
         [{line,55},
          {label,60},
          {func_info,{atom,adtgraph},{atom,getEdges},1},
          {label,61},
          {test,is_tuple,{f,60},[{x,0}]},
          {test,test_arity,{f,60},[{x,0},3]},
          {get_tuple_element,{x,0},2,{x,0}},
          return]},
     {function,importG,2,63,
         [{line,56},
          {label,62},
          {func_info,{atom,adtgraph},{atom,importG},2},
          {label,63},
          {allocate_zero,3,2},
          {move,{x,1},{y,2}},
          {move,{atom,graph},{x,1}},
          {line,57},
          {call_ext,2,{extfunc,util,attachEnding,2}},
          {move,{x,0},{y,1}},
          {line,58},
          {call_ext,1,{extfunc,util,readlist,1}},
          {move,{x,0},{x,1}},
          {move,{y,2},{x,0}},
          {move,{x,1},{y,2}},
          {line,58},
          {call,1,{adtgraph,createG,1}},
          {move,{x,0},{x,1}},
          {move,{y,2},{x,0}},
          {init,{y,2}},
          {line,58},
          {call,2,{adtgraph,importIter,2}},
          {move,{x,0},{y,2}},
          {line,59},
          {call,1,{adtgraph,getVertices,1}},
          {line,59},
          {gc_bif,length,{f,0},1,[{x,0}],{y,0}},
          {move,{y,2},{x,0}},
          {line,59},
          {call,1,{adtgraph,getEdges,1}},
          {line,59},
          {gc_bif,length,{f,0},1,[{x,0}],{x,0}},
          {line,59},
          {fconv,{x,0},{fr,0}},
          {fmove,{float,2.0},{fr,1}},
          fclearerror,
          {arithfbif,fdiv,{f,0},[{fr,0},{fr,1}],{fr,0}},
          {line,59},
          {test_heap,{alloc,[{words,0},{floats,1}]},1},
          {fcheckerror,{f,0}},
          {fmove,{fr,0},{x,0}},
          {gc_bif,round,{f,0},1,[{x,0}],{x,0}},
          {test_heap,6,1},
          {put_list,{y,1},nil,{x,2}},
          {put_list,{x,0},{x,2},{x,0}},
          {put_list,{y,0},{x,0},{x,1}},
          {trim,2,1},
          {move,
              {literal,
                  "Graph mit ~p Ecken und ~p Kanten aus ~p importiert.\n"},
              {x,0}},
          {line,60},
          {call_ext,2,{extfunc,io,format,2}},
          {move,{y,0},{x,0}},
          {deallocate,1},
          return]},
     {function,importIter,2,65,
         [{line,61},
          {label,64},
          {func_info,{atom,adtgraph},{atom,importIter},2},
          {label,65},
          {test,is_nonempty_list,{f,66},[{x,0}]},
          {get_list,{x,0},{x,2},{x,3}},
          {test,is_nonempty_list,{f,67},[{x,3}]},
          {get_list,{x,3},{x,4},{x,5}},
          {test,is_nonempty_list,{f,67},[{x,5}]},
          {allocate,4,6},
          {get_list,{x,5},{y,2},{y,3}},
          {move,{x,1},{x,0}},
          {move,{x,2},{x,1}},
          {move,{x,4},{x,2}},
          {move,{x,1},{y,0}},
          {move,{x,2},{y,1}},
          {line,62},
          {call,3,{adtgraph,addEdge,3}},
          {move,{atom,weight},{x,3}},
          {move,{y,1},{x,2}},
          {move,{y,2},{x,4}},
          {move,{y,0},{x,1}},
          {trim,3,1},
          {line,62},
          {call,5,{adtgraph,setAtE,5}},
          {move,{x,0},{x,1}},
          {move,{y,0},{x,0}},
          {call_last,2,{adtgraph,importIter,2},1},
          {label,66},
          {test,is_nil,{f,67},[{x,0}]},
          {move,{x,1},{x,0}},
          return,
          {label,67},
          {allocate_heap,1,2,2},
          {move,{x,1},{y,0}},
          {put_list,{x,0},nil,{x,1}},
          {move,
              {literal,
                  "Fehler beim importieren eines Graphen: Listenformat stimmt nicht (~p)\n"},
              {x,0}},
          {line,63},
          {call_ext,2,{extfunc,io,format,2}},
          {move,{y,0},{x,0}},
          {deallocate,1},
          return]},
     {function,exportG,2,69,
         [{line,64},
          {label,68},
          {func_info,{atom,adtgraph},{atom,exportG},2},
          {label,69},
          {allocate,3,2},
          {init,{y,0}},
          {move,{x,1},{y,1}},
          {move,{x,0},{y,2}},
          {line,65},
          {call,1,{adtgraph,getVertices,1}},
          {move,{x,0},{y,0}},
          {move,{y,2},{x,0}},
          {line,66},
          {call,1,{adtgraph,getEdges,1}},
          {move,{x,0},{x,2}},
          {move,{atom,graph},{x,1}},
          {move,{y,1},{x,0}},
          {move,{x,2},{y,1}},
          {line,67},
          {call_ext,2,{extfunc,util,attachEnding,2}},
          {line,68},
          {gc_bif,length,{f,0},1,[{y,0}],{x,1}},
          {line,68},
          {gc_bif,length,{f,0},2,[{y,1}],{x,2}},
          {line,68},
          {fconv,{x,2},{fr,0}},
          {fmove,{float,2.0},{fr,1}},
          fclearerror,
          {arithfbif,fdiv,{f,0},[{fr,0},{fr,1}],{fr,0}},
          {line,68},
          {test_heap,{alloc,[{words,0},{floats,1}]},3},
          {fcheckerror,{f,0}},
          {fmove,{fr,0},{x,2}},
          {gc_bif,round,{f,0},3,[{x,2}],{x,2}},
          {test_heap,6,3},
          {move,{x,0},{y,0}},
          {put_list,{y,0},nil,{x,0}},
          {put_list,{x,2},{x,0},{x,0}},
          {put_list,{x,1},{x,0},{x,1}},
          {move,
              {literal,
                  "Exportiere Graph mit ~p Ecken und ~p Kanten nach ~p.\n"},
              {x,0}},
          {line,69},
          {call_ext,2,{extfunc,io,format,2}},
          {move,{y,1},{x,1}},
          {move,{y,2},{x,0}},
          {init,{y,1}},
          {init,{y,2}},
          {line,70},
          {call,2,{adtgraph,exportIter,2}},
          {move,{y,0},{x,1}},
          {line,70},
          {call_ext_last,2,{extfunc,util,writelist,2},3}]},
     {function,exportIter,2,71,
         [{line,71},
          {label,70},
          {func_info,{atom,adtgraph},{atom,exportIter},2},
          {label,71},
          {test,is_nonempty_list,{f,72},[{x,1}]},
          {get_list,{x,1},{x,2},{x,3}},
          {test,is_nonempty_list,{f,73},[{x,3}]},
          {allocate,4,4},
          {get_list,{x,3},{x,4},{y,1}},
          {move,{atom,weight},{x,3}},
          {move,{x,2},{x,1}},
          {move,{x,4},{x,2}},
          {move,{x,0},{y,0}},
          {move,{x,2},{y,2}},
          {move,{x,1},{y,3}},
          {line,72},
          {call,4,{adtgraph,getValE,4}},
          {move,{x,0},{x,2}},
          {move,{y,1},{x,1}},
          {move,{y,0},{x,0}},
          {move,{x,2},{y,1}},
          {trim,1,3},
          {line,72},
          {call,2,{adtgraph,exportIter,2}},
          {test_heap,6,1},
          {put_list,{y,0},{x,0},{x,0}},
          {put_list,{y,1},{x,0},{x,1}},
          {put_list,{y,2},{x,1},{x,0}},
          {deallocate,3},
          return,
          {label,72},
          {test,is_nil,{f,73},[{x,1}]},
          {move,nil,{x,0}},
          return,
          {label,73},
          {allocate_heap,0,2,2},
          {put_list,{x,1},nil,{x,1}},
          {move,
              {literal,
                  "Fehler beim exportieren eines Graphen: Listenformat der Kanten stimmt nicht (~p)\n"},
              {x,0}},
          {line,73},
          {call_ext,2,{extfunc,io,format,2}},
          {move,nil,{x,0}},
          {deallocate,0},
          return]},
     {function,printG,2,75,
         [{line,74},
          {label,74},
          {func_info,{atom,adtgraph},{atom,printG},2},
          {label,75},
          {test,is_tuple,{f,83},[{x,0}]},
          {test,test_arity,{f,83},[{x,0},3]},
          {allocate,3,2},
          {get_tuple_element,{x,0},0,{y,2}},
          {get_tuple_element,{x,0},1,{y,0}},
          {get_tuple_element,{x,0},2,{y,1}},
          {move,{x,1},{x,0}},
          {move,{atom,dot},{x,1}},
          {line,75},
          {call_ext,2,{extfunc,util,attachEnding,2}},
          {line,76},
          {gc_bif,length,{f,0},1,[{y,0}],{x,1}},
          {line,77},
          {gc_bif,length,{f,0},2,[{y,1}],{x,2}},
          {test,is_ge,{f,76},[{x,1},{integer,43}]},
          {test,is_lt,{f,80},[{x,2},{integer,143}]},
          {label,76},
          {move,{x,0},{y,0}},
          {move,{atom,yndirected},{x,0}},
          {line,78},
          {call_ext,1,{extfunc,util,getglobalvar,1}},
          {test,is_atom,{f,84},[{x,0}]},
          {select_val,
              {x,0},
              {f,84},
              {list,[{atom,nondirected},{f,77},{atom,directed},{f,78}]}},
          {label,77},
          {move,{literal,"graph ungerichtet\n{\n"},{x,1}},
          {jump,{f,79}},
          {label,78},
          {move,{literal,"digraph gerichtet\n{\n"},{x,1}},
          {label,79},
          {move,{y,0},{x,0}},
          {line,79},
          {call_ext,2,{extfunc,util,logging,2}},
          {move,{y,2},{x,1}},
          {move,{y,0},{x,2}},
          {move,{y,1},{x,0}},
          {init,{y,1}},
          {init,{y,2}},
          {line,80},
          {call,3,{adtgraph,printGH,3}},
          {move,{literal,"}\n"},{x,1}},
          {move,{y,0},{x,0}},
          {init,{y,0}},
          {line,81},
          {call_ext,2,{extfunc,util,logging,2}},
          {jump,{f,82}},
          {label,80},
          {test,is_ge,{f,81},[{integer,42},{x,1}]},
          {test,is_lt,{f,85},[{integer,142},{x,2}]},
          {label,81},
          {move,{literal,"Graph visuell nicht mehr gut darstellbar\n"},{x,1}},
          {init,{y,0}},
          {init,{y,1}},
          {init,{y,2}},
          {line,82},
          {call_ext,2,{extfunc,util,logging,2}},
          {label,82},
          {move,{atom,ok},{x,0}},
          {deallocate,3},
          return,
          {label,83},
          {move,{atom,nok},{x,0}},
          return,
          {label,84},
          {line,78},
          {case_end,{x,0}},
          {label,85},
          {line,83},
          if_end]},
     {function,printGH,3,87,
         [{line,84},
          {label,86},
          {func_info,{atom,adtgraph},{atom,printGH},3},
          {label,87},
          {test,is_nonempty_list,{f,91},[{x,0}]},
          {get_list,{x,0},{x,3},{x,4}},
          {test,is_nonempty_list,{f,91},[{x,4}]},
          {allocate,5,5},
          {get_list,{x,4},{y,1},{y,4}},
          {move,{atom,yndirected},{x,0}},
          {move,{x,3},{y,0}},
          {move,{x,2},{y,2}},
          {move,{x,1},{y,3}},
          {line,85},
          {call_ext,1,{extfunc,util,getglobalvar,1}},
          {test,is_atom,{f,92},[{x,0}]},
          {select_val,
              {x,0},
              {f,92},
              {list,[{atom,directed},{f,88},{atom,nondirected},{f,89}]}},
          {label,88},
          {test_heap,2,0},
          {put_list,{y,0},{literal,[" -> "]},{x,0}},
          {line,86},
          {call_ext,1,{extfunc,lists,concat,1}},
          {move,{x,0},{x,1}},
          {jump,{f,90}},
          {label,89},
          {test_heap,2,0},
          {put_list,{y,0},{literal,[" -- "]},{x,0}},
          {line,87},
          {call_ext,1,{extfunc,lists,concat,1}},
          {move,{x,0},{x,1}},
          {label,90},
          {test_heap,4,2},
          {put_tuple,3,{x,0}},
          {put,{y,3}},
          {put,{literal,[dummy]}},
          {put,{literal,[dummy]}},
          {move,{x,1},{x,4}},
          {move,{y,1},{x,2}},
          {move,{atom,weight},{x,3}},
          {move,{y,0},{x,1}},
          {move,{x,4},{y,0}},
          {line,88},
          {call,4,{adtgraph,getValE,4}},
          {test_heap,6,1},
          {put_list,{x,0},{literal,["];\n"]},{x,0}},
          {put_list,{literal," [label = "},{x,0},{x,1}},
          {put_list,{y,1},{x,1},{x,0}},
          {init,{y,1}},
          {line,88},
          {call_ext,1,{extfunc,lists,concat,1}},
          {test_heap,4,1},
          {put_list,{x,0},nil,{x,1}},
          {put_list,{y,0},{x,1},{x,0}},
          {trim,2,3},
          {line,89},
          {call_ext,1,{extfunc,lists,concat,1}},
          {move,{x,0},{x,1}},
          {move,{y,0},{x,0}},
          {line,90},
          {call_ext,2,{extfunc,util,logging,2}},
          {move,{y,1},{x,1}},
          {move,{y,0},{x,2}},
          {move,{y,2},{x,0}},
          {call_last,3,{adtgraph,printGH,3},3},
          {label,91},
          {move,{atom,ok},{x,0}},
          return,
          {label,92},
          {line,85},
          {case_end,{x,0}}]},
     {function,printGFF,2,94,
         [{line,91},
          {label,93},
          {func_info,{atom,adtgraph},{atom,printGFF},2},
          {label,94},
          {test,is_tuple,{f,102},[{x,0}]},
          {test,test_arity,{f,102},[{x,0},3]},
          {allocate,3,2},
          {get_tuple_element,{x,0},0,{y,2}},
          {get_tuple_element,{x,0},1,{y,0}},
          {get_tuple_element,{x,0},2,{y,1}},
          {move,{x,1},{x,0}},
          {move,{atom,dot},{x,1}},
          {line,92},
          {call_ext,2,{extfunc,util,attachEnding,2}},
          {line,93},
          {gc_bif,length,{f,0},1,[{y,0}],{x,1}},
          {line,94},
          {gc_bif,length,{f,0},2,[{y,1}],{x,2}},
          {test,is_ge,{f,95},[{x,1},{integer,43}]},
          {test,is_lt,{f,99},[{x,2},{integer,143}]},
          {label,95},
          {move,{x,0},{y,0}},
          {move,{atom,yndirected},{x,0}},
          {line,95},
          {call_ext,1,{extfunc,util,getglobalvar,1}},
          {test,is_atom,{f,103},[{x,0}]},
          {select_val,
              {x,0},
              {f,103},
              {list,[{atom,nondirected},{f,96},{atom,directed},{f,97}]}},
          {label,96},
          {move,{literal,"graph ungerichtet\n{\n"},{x,1}},
          {jump,{f,98}},
          {label,97},
          {move,{literal,"digraph gerichtet\n{\n"},{x,1}},
          {label,98},
          {move,{y,0},{x,0}},
          {line,96},
          {call_ext,2,{extfunc,util,logging,2}},
          {move,{y,2},{x,1}},
          {move,{y,0},{x,2}},
          {move,{y,1},{x,0}},
          {init,{y,1}},
          {init,{y,2}},
          {line,97},
          {call,3,{adtgraph,printGFFH,3}},
          {move,{literal,"}\n"},{x,1}},
          {move,{y,0},{x,0}},
          {init,{y,0}},
          {line,98},
          {call_ext,2,{extfunc,util,logging,2}},
          {jump,{f,101}},
          {label,99},
          {test,is_ge,{f,100},[{integer,42},{x,1}]},
          {test,is_lt,{f,104},[{integer,142},{x,2}]},
          {label,100},
          {move,{literal,"Graph visuell nicht mehr gut darstellbar\n"},{x,1}},
          {init,{y,0}},
          {init,{y,1}},
          {init,{y,2}},
          {line,99},
          {call_ext,2,{extfunc,util,logging,2}},
          {label,101},
          {move,{atom,ok},{x,0}},
          {deallocate,3},
          return,
          {label,102},
          {move,{atom,nok},{x,0}},
          return,
          {label,103},
          {line,95},
          {case_end,{x,0}},
          {label,104},
          {line,100},
          if_end]},
     {function,printGFFH,3,106,
         [{line,101},
          {label,105},
          {func_info,{atom,adtgraph},{atom,printGFFH},3},
          {label,106},
          {test,is_nonempty_list,{f,110},[{x,0}]},
          {get_list,{x,0},{x,3},{x,4}},
          {test,is_nonempty_list,{f,110},[{x,4}]},
          {allocate,6,5},
          {init,{y,0}},
          {get_list,{x,4},{y,2},{y,5}},
          {move,{atom,yndirected},{x,0}},
          {move,{x,3},{y,1}},
          {move,{x,2},{y,3}},
          {move,{x,1},{y,4}},
          {line,102},
          {call_ext,1,{extfunc,util,getglobalvar,1}},
          {test,is_atom,{f,111},[{x,0}]},
          {select_val,
              {x,0},
              {f,111},
              {list,[{atom,directed},{f,107},{atom,nondirected},{f,108}]}},
          {label,107},
          {test_heap,2,0},
          {put_list,{y,1},{literal,[" -> "]},{x,0}},
          {line,103},
          {call_ext,1,{extfunc,lists,concat,1}},
          {move,{x,0},{x,1}},
          {jump,{f,109}},
          {label,108},
          {test_heap,2,0},
          {put_list,{y,1},{literal,[" -- "]},{x,0}},
          {line,104},
          {call_ext,1,{extfunc,lists,concat,1}},
          {move,{x,0},{x,1}},
          {label,109},
          {test_heap,4,2},
          {move,{x,1},{y,0}},
          {put_tuple,3,{x,0}},
          {put,{y,4}},
          {put,{literal,[dummy]}},
          {put,{literal,[dummy]}},
          {move,{y,2},{x,2}},
          {move,{atom,weight},{x,3}},
          {move,{y,1},{x,1}},
          {line,105},
          {call,4,{adtgraph,getValE,4}},
          {test_heap,4,1},
          {put_tuple,3,{x,4}},
          {put,{y,4}},
          {put,{literal,[dummy]}},
          {put,{literal,[dummy]}},
          {move,{x,0},{x,5}},
          {move,{y,2},{x,2}},
          {move,{y,1},{x,1}},
          {move,{atom,flow},{x,3}},
          {move,{x,4},{x,0}},
          {move,{x,5},{y,1}},
          {line,106},
          {call,4,{adtgraph,getValE,4}},
          {test_heap,10,1},
          {put_list,{x,0},{literal,[")\"];\n"]},{x,0}},
          {put_list,{literal,",f:"},{x,0},{x,0}},
          {put_list,{y,1},{x,0},{x,0}},
          {put_list,{literal," [label = \"(c:"},{x,0},{x,1}},
          {put_list,{y,2},{x,1},{x,0}},
          {init,{y,1}},
          {init,{y,2}},
          {line,105},
          {call_ext,1,{extfunc,lists,concat,1}},
          {test_heap,4,1},
          {put_list,{x,0},nil,{x,1}},
          {put_list,{y,0},{x,1},{x,0}},
          {trim,3,3},
          {line,107},
          {call_ext,1,{extfunc,lists,concat,1}},
          {move,{x,0},{x,1}},
          {move,{y,0},{x,0}},
          {line,108},
          {call_ext,2,{extfunc,util,logging,2}},
          {move,{y,1},{x,1}},
          {move,{y,0},{x,2}},
          {move,{y,2},{x,0}},
          {call_last,3,{adtgraph,printGFFH,3},3},
          {label,110},
          {move,{atom,ok},{x,0}},
          return,
          {label,111},
          {line,102},
          {case_end,{x,0}}]},
     {function,getTarget,1,113,
         [{line,109},
          {label,112},
          {func_info,{atom,adtgraph},{atom,getTarget},1},
          {label,113},
          {call_only,1,{adtgraph,get_target,1}}]},
     {function,getSource,1,115,
         [{line,110},
          {label,114},
          {func_info,{atom,adtgraph},{atom,getSource},1},
          {label,115},
          {call_only,1,{adtgraph,get_source,1}}]},
     {function,createEdgeA,2,117,
         [{line,111},
          {label,116},
          {func_info,{atom,adtgraph},{atom,createEdgeA},2},
          {label,117},
          {allocate,1,2},
          {move,{atom,yndirected},{x,0}},
          {move,{x,1},{y,0}},
          {line,112},
          {call_ext,1,{extfunc,util,getglobalvar,1}},
          {test,is_atom,{f,120},[{x,0}]},
          {select_val,
              {x,0},
              {f,120},
              {list,[{atom,nondirected},{f,118},{atom,directed},{f,119}]}},
          {label,118},
          {line,113},
          {call,0,{adtgraph,initVTS,0}},
          {move,{x,0},{x,1}},
          {move,{y,0},{x,0}},
          {line,113},
          {call,2,{adtgraph,ins_target,2}},
          {move,{x,0},{x,1}},
          {move,{y,0},{x,0}},
          {call_last,2,{adtgraph,ins_source,2},1},
          {label,119},
          {line,114},
          {call,0,{adtgraph,initVTS,0}},
          {move,{x,0},{x,1}},
          {move,{y,0},{x,0}},
          {call_last,2,{adtgraph,ins_target,2},1},
          {label,120},
          {line,112},
          {case_end,{x,0}}]},
     {function,createEdgeB,2,122,
         [{line,115},
          {label,121},
          {func_info,{atom,adtgraph},{atom,createEdgeB},2},
          {label,122},
          {allocate,1,1},
          {move,{x,0},{y,0}},
          {move,{atom,yndirected},{x,0}},
          {line,116},
          {call_ext,1,{extfunc,util,getglobalvar,1}},
          {test,is_atom,{f,125},[{x,0}]},
          {select_val,
              {x,0},
              {f,125},
              {list,[{atom,nondirected},{f,123},{atom,directed},{f,124}]}},
          {label,123},
          {line,117},
          {call,0,{adtgraph,initVTS,0}},
          {move,{x,0},{x,1}},
          {move,{y,0},{x,0}},
          {line,117},
          {call,2,{adtgraph,ins_source,2}},
          {move,{x,0},{x,1}},
          {move,{y,0},{x,0}},
          {call_last,2,{adtgraph,ins_target,2},1},
          {label,124},
          {line,118},
          {call,0,{adtgraph,initVTS,0}},
          {move,{x,0},{x,1}},
          {move,{y,0},{x,0}},
          {call_last,2,{adtgraph,ins_source,2},1},
          {label,125},
          {line,116},
          {case_end,{x,0}}]},
     {function,delSTEdges,3,127,
         [{line,119},
          {label,126},
          {func_info,{atom,adtgraph},{atom,delSTEdges},3},
          {label,127},
          {test,is_nonempty_list,{f,128},[{x,2}]},
          {allocate,2,3},
          {get_list,{x,2},{x,2},{y,1}},
          {move,{x,1},{y,0}},
          {line,120},
          {call,3,{adtgraph,deleteEdge,3}},
          {move,{y,1},{x,2}},
          {move,{y,0},{x,1}},
          {call_last,3,{adtgraph,delSTEdges,3},2},
          {label,128},
          {test,is_nil,{f,126},[{x,2}]},
          return]},
     {function,delTSEdges,3,130,
         [{line,121},
          {label,129},
          {func_info,{atom,adtgraph},{atom,delTSEdges},3},
          {label,130},
          {test,is_nonempty_list,{f,131},[{x,2}]},
          {allocate,2,3},
          {get_list,{x,2},{x,3},{y,1}},
          {move,{x,1},{x,2}},
          {move,{x,3},{x,1}},
          {move,{x,2},{y,0}},
          {line,122},
          {call,3,{adtgraph,deleteEdge,3}},
          {move,{y,1},{x,2}},
          {move,{y,0},{x,1}},
          {call_last,3,{adtgraph,delTSEdges,3},2},
          {label,131},
          {test,is_nil,{f,129},[{x,2}]},
          return]},
     {function,createAllEdges,3,133,
         [{line,123},
          {label,132},
          {func_info,{atom,adtgraph},{atom,createAllEdges},3},
          {label,133},
          {test,is_nonempty_list,{f,134},[{x,1}]},
          {allocate,2,3},
          {get_list,{x,1},{y,1},{x,1}},
          {move,{x,0},{y,0}},
          {line,124},
          {call,3,{adtgraph,createAllEdges,3}},
          {test_heap,4,1},
          {put_list,{y,0},{x,0},{x,1}},
          {put_list,{y,1},{x,1},{x,0}},
          {deallocate,2},
          return,
          {label,134},
          {test,is_nil,{f,132},[{x,1}]},
          {test,is_nonempty_list,{f,135},[{x,2}]},
          {allocate,2,3},
          {get_list,{x,2},{y,0},{x,2}},
          {move,nil,{x,1}},
          {move,{x,0},{y,1}},
          {line,125},
          {call,3,{adtgraph,createAllEdges,3}},
          {test_heap,4,1},
          {put_list,{y,0},{x,0},{x,1}},
          {put_list,{y,1},{x,1},{x,0}},
          {deallocate,2},
          return,
          {label,135},
          {test,is_nil,{f,132},[{x,2}]},
          {move,nil,{x,0}},
          return]},
     {function,putEdgeList,3,137,
         [{line,126},
          {label,136},
          {func_info,{atom,adtgraph},{atom,putEdgeList},3},
          {label,137},
          {test,is_nonempty_list,{f,140},[{x,2}]},
          {get_list,{x,2},{x,3},{x,4}},
          {test,is_nonempty_list,{f,136},[{x,4}]},
          {get_list,{x,4},{x,5},{x,6}},
          {test,is_lt,{f,138},[{x,3},{x,0}]},
          {allocate,2,7},
          {move,{x,6},{x,2}},
          {move,{x,5},{y,0}},
          {move,{x,3},{y,1}},
          {line,127},
          {call,3,{adtgraph,putEdgeList,3}},
          {test_heap,4,1},
          {put_list,{y,0},{x,0},{x,1}},
          {put_list,{y,1},{x,1},{x,0}},
          {deallocate,2},
          return,
          {label,138},
          {test,is_eq_exact,{f,139},[{x,3},{x,0}]},
          {test_heap,4,7},
          {put_list,{x,5},{x,6},{x,3}},
          {put_list,{x,0},{x,3},{x,2}},
          {call_only,3,{adtgraph,sortAdjEdgeList,3}},
          {label,139},
          {test,is_lt,{f,136},[{x,0},{x,3}]},
          {test_heap,8,7},
          {put_list,{x,5},{x,6},{x,2}},
          {put_list,{x,3},{x,2},{x,2}},
          {put_list,{x,1},{x,2},{x,1}},
          {put_list,{x,0},{x,1},{x,0}},
          return,
          {label,140},
          {test,is_nil,{f,136},[{x,2}]},
          {test_heap,4,2},
          {put_list,{x,1},nil,{x,1}},
          {put_list,{x,0},{x,1},{x,0}},
          return]},
     {function,sortAdjEdgeList,3,142,
         [{line,128},
          {label,141},
          {func_info,{atom,adtgraph},{atom,sortAdjEdgeList},3},
          {label,142},
          {test,is_nonempty_list,{f,146},[{x,2}]},
          {get_list,{x,2},{x,3},{x,4}},
          {test,is_nonempty_list,{f,141},[{x,4}]},
          {get_list,{x,4},{x,5},{x,6}},
          {test,is_eq_exact,{f,145},[{x,3},{x,0}]},
          {test,is_lt,{f,143},[{x,5},{x,1}]},
          {allocate,2,7},
          {move,{x,6},{x,2}},
          {move,{x,5},{y,0}},
          {move,{x,0},{y,1}},
          {line,129},
          {call,3,{adtgraph,sortAdjEdgeList,3}},
          {test_heap,4,1},
          {put_list,{y,0},{x,0},{x,1}},
          {put_list,{y,1},{x,1},{x,0}},
          {deallocate,2},
          return,
          {label,143},
          {test,is_eq_exact,{f,145},[{x,3},{x,0}]},
          {test,is_eq_exact,{f,144},[{x,5},{x,1}]},
          {test_heap,4,7},
          {put_list,{x,1},{x,6},{x,1}},
          {put_list,{x,0},{x,1},{x,0}},
          return,
          {label,144},
          {test,is_eq_exact,{f,145},[{x,3},{x,0}]},
          {test,is_lt,{f,145},[{x,1},{x,5}]},
          {test_heap,8,7},
          {put_list,{x,5},{x,6},{x,2}},
          {put_list,{x,0},{x,2},{x,2}},
          {put_list,{x,1},{x,2},{x,1}},
          {put_list,{x,0},{x,1},{x,0}},
          return,
          {label,145},
          {test_heap,8,7},
          {put_list,{x,5},{x,6},{x,2}},
          {put_list,{x,3},{x,2},{x,2}},
          {put_list,{x,1},{x,2},{x,1}},
          {put_list,{x,0},{x,1},{x,0}},
          return,
          {label,146},
          {test,is_nil,{f,141},[{x,2}]},
          {test_heap,4,2},
          {put_list,{x,1},nil,{x,1}},
          {put_list,{x,0},{x,1},{x,0}},
          return]},
     {function,delEdgeList,3,148,
         [{line,130},
          {label,147},
          {func_info,{atom,adtgraph},{atom,delEdgeList},3},
          {label,148},
          {test,is_nonempty_list,{f,151},[{x,0}]},
          {get_list,{x,0},{x,3},{x,4}},
          {test,is_nonempty_list,{f,147},[{x,4}]},
          {get_list,{x,4},{x,5},{x,6}},
          {test,is_eq_exact,{f,149},[{x,1},{x,3}]},
          {test,is_eq_exact,{f,149},[{x,2},{x,5}]},
          {move,{x,6},{x,0}},
          return,
          {label,149},
          {test,is_ge,{f,150},[{x,1},{x,3}]},
          {allocate,2,7},
          {move,{x,6},{x,0}},
          {move,{x,5},{y,0}},
          {move,{x,3},{y,1}},
          {line,131},
          {call,3,{adtgraph,delEdgeList,3}},
          {test_heap,4,1},
          {put_list,{y,0},{x,0},{x,1}},
          {put_list,{y,1},{x,1},{x,0}},
          {deallocate,2},
          return,
          {label,150},
          {test,is_lt,{f,147},[{x,1},{x,3}]},
          {test_heap,4,7},
          {put_list,{x,5},{x,6},{x,1}},
          {put_list,{x,3},{x,1},{x,0}},
          return,
          {label,151},
          {test,is_nil,{f,147},[{x,0}]},
          return]},
     {function,initVTS,0,153,
         [{line,132},
          {label,152},
          {func_info,{atom,adtgraph},{atom,initVTS},0},
          {label,153},
          {move,{literal,{[],[],[],[]}},{x,0}},
          return]},
     {function,ins_source,2,155,
         [{line,133},
          {label,154},
          {func_info,{atom,adtgraph},{atom,ins_source},2},
          {label,155},
          {test,is_nonempty_list,{f,156},[{x,0}]},
          {get_list,{x,0},{x,2},{x,3}},
          {test,is_tuple,{f,154},[{x,1}]},
          {test,test_arity,{f,157},[{x,1},4]},
          {allocate_heap,3,2,4},
          {get_tuple_element,{x,1},1,{y,0}},
          {get_tuple_element,{x,1},2,{y,1}},
          {get_tuple_element,{x,1},3,{y,2}},
          {put_list,{x,2},{x,3},{x,0}},
          {get_tuple_element,{x,1},0,{x,1}},
          {line,134},
          {call,2,{adtgraph,appendSL,2}},
          {test_heap,5,1},
          {put_tuple,4,{x,1}},
          {put,{x,0}},
          {put,{y,0}},
          {put,{y,1}},
          {put,{y,2}},
          {move,{x,1},{x,0}},
          {deallocate,3},
          return,
          {label,156},
          {test,is_nil,{f,157},[{x,0}]},
          {test,is_tuple,{f,154},[{x,1}]},
          {test,test_arity,{f,157},[{x,1},4]},
          {test_heap,5,2},
          {get_tuple_element,{x,1},0,{x,2}},
          {get_tuple_element,{x,1},1,{x,3}},
          {get_tuple_element,{x,1},2,{x,4}},
          {get_tuple_element,{x,1},3,{x,5}},
          {put_tuple,4,{x,0}},
          {put,{x,2}},
          {put,{x,3}},
          {put,{x,4}},
          {put,{x,5}},
          return,
          {label,157},
          {test,is_tuple,{f,154},[{x,1}]},
          {test,test_arity,{f,154},[{x,1},4]},
          {allocate,3,2},
          {get_tuple_element,{x,1},1,{y,2}},
          {get_tuple_element,{x,1},2,{y,1}},
          {get_tuple_element,{x,1},3,{y,0}},
          {get_tuple_element,{x,1},0,{x,1}},
          {line,135},
          {call,2,{adtgraph,putSL,2}},
          {test_heap,5,1},
          {put_tuple,4,{x,1}},
          {put,{x,0}},
          {put,{y,2}},
          {put,{y,1}},
          {put,{y,0}},
          {move,{x,1},{x,0}},
          {deallocate,3},
          return]},
     {function,ins_target,2,159,
         [{line,136},
          {label,158},
          {func_info,{atom,adtgraph},{atom,ins_target},2},
          {label,159},
          {test,is_nonempty_list,{f,160},[{x,0}]},
          {get_list,{x,0},{x,2},{x,3}},
          {test,is_tuple,{f,158},[{x,1}]},
          {test,test_arity,{f,161},[{x,1},4]},
          {allocate_heap,3,2,4},
          {get_tuple_element,{x,1},0,{y,0}},
          {get_tuple_element,{x,1},2,{y,1}},
          {get_tuple_element,{x,1},3,{y,2}},
          {put_list,{x,2},{x,3},{x,0}},
          {get_tuple_element,{x,1},1,{x,1}},
          {line,137},
          {call,2,{adtgraph,appendSL,2}},
          {test_heap,5,1},
          {put_tuple,4,{x,1}},
          {put,{y,0}},
          {put,{x,0}},
          {put,{y,1}},
          {put,{y,2}},
          {move,{x,1},{x,0}},
          {deallocate,3},
          return,
          {label,160},
          {test,is_nil,{f,161},[{x,0}]},
          {test,is_tuple,{f,158},[{x,1}]},
          {test,test_arity,{f,161},[{x,1},4]},
          {test_heap,5,2},
          {get_tuple_element,{x,1},0,{x,2}},
          {get_tuple_element,{x,1},1,{x,3}},
          {get_tuple_element,{x,1},2,{x,4}},
          {get_tuple_element,{x,1},3,{x,5}},
          {put_tuple,4,{x,0}},
          {put,{x,2}},
          {put,{x,3}},
          {put,{x,4}},
          {put,{x,5}},
          return,
          {label,161},
          {test,is_tuple,{f,158},[{x,1}]},
          {test,test_arity,{f,158},[{x,1},4]},
          {allocate,3,2},
          {get_tuple_element,{x,1},0,{y,2}},
          {get_tuple_element,{x,1},2,{y,1}},
          {get_tuple_element,{x,1},3,{y,0}},
          {get_tuple_element,{x,1},1,{x,1}},
          {line,138},
          {call,2,{adtgraph,putSL,2}},
          {test_heap,5,1},
          {put_tuple,4,{x,1}},
          {put,{y,2}},
          {put,{x,0}},
          {put,{y,1}},
          {put,{y,0}},
          {move,{x,1},{x,0}},
          {deallocate,3},
          return]},
     {function,ins_vattr,2,163,
         [{line,139},
          {label,162},
          {func_info,{atom,adtgraph},{atom,ins_vattr},2},
          {label,163},
          {test,is_nonempty_list,{f,164},[{x,0}]},
          {get_list,{x,0},{x,2},{x,3}},
          {test,is_tuple,{f,162},[{x,1}]},
          {test,test_arity,{f,162},[{x,1},4]},
          {allocate_heap,3,2,4},
          {get_tuple_element,{x,1},0,{y,0}},
          {get_tuple_element,{x,1},1,{y,1}},
          {get_tuple_element,{x,1},3,{y,2}},
          {put_list,{x,2},{x,3},{x,0}},
          {get_tuple_element,{x,1},2,{x,1}},
          {line,140},
          {call,2,{adtgraph,putAVL,2}},
          {test_heap,5,1},
          {put_tuple,4,{x,1}},
          {put,{y,0}},
          {put,{y,1}},
          {put,{x,0}},
          {put,{y,2}},
          {move,{x,1},{x,0}},
          {deallocate,3},
          return,
          {label,164},
          {test,is_tuple,{f,165},[{x,0}]},
          {test,test_arity,{f,162},[{x,0},2]},
          {test,is_tuple,{f,162},[{x,1}]},
          {test,test_arity,{f,162},[{x,1},4]},
          {allocate_heap,3,3,2},
          {get_tuple_element,{x,0},0,{x,2}},
          {get_tuple_element,{x,0},1,{x,3}},
          {get_tuple_element,{x,1},0,{y,0}},
          {get_tuple_element,{x,1},1,{y,1}},
          {get_tuple_element,{x,1},3,{y,2}},
          {put_tuple,2,{x,0}},
          {put,{x,2}},
          {put,{x,3}},
          {get_tuple_element,{x,1},2,{x,1}},
          {line,141},
          {call,2,{adtgraph,putAVL,2}},
          {test_heap,5,1},
          {put_tuple,4,{x,1}},
          {put,{y,0}},
          {put,{y,1}},
          {put,{x,0}},
          {put,{y,2}},
          {move,{x,1},{x,0}},
          {deallocate,3},
          return,
          {label,165},
          {test,is_nil,{f,162},[{x,0}]},
          {test,is_tuple,{f,162},[{x,1}]},
          {test,test_arity,{f,162},[{x,1},4]},
          {test_heap,5,2},
          {get_tuple_element,{x,1},0,{x,2}},
          {get_tuple_element,{x,1},1,{x,3}},
          {get_tuple_element,{x,1},2,{x,4}},
          {get_tuple_element,{x,1},3,{x,5}},
          {put_tuple,4,{x,0}},
          {put,{x,2}},
          {put,{x,3}},
          {put,{x,4}},
          {put,{x,5}},
          return]},
     {function,ins_stattr,2,167,
         [{line,142},
          {label,166},
          {func_info,{atom,adtgraph},{atom,ins_stattr},2},
          {label,167},
          {test,is_nonempty_list,{f,168},[{x,0}]},
          {get_list,{x,0},{x,2},{x,3}},
          {test,is_tuple,{f,166},[{x,1}]},
          {test,test_arity,{f,166},[{x,1},4]},
          {allocate_heap,3,2,4},
          {get_tuple_element,{x,1},0,{y,0}},
          {get_tuple_element,{x,1},1,{y,1}},
          {get_tuple_element,{x,1},2,{y,2}},
          {get_tuple_element,{x,1},3,{x,1}},
          {put_list,{x,2},{x,3},{x,0}},
          {line,143},
          {call,2,{adtgraph,putAVLT,2}},
          {test_heap,5,1},
          {put_tuple,4,{x,1}},
          {put,{y,0}},
          {put,{y,1}},
          {put,{y,2}},
          {put,{x,0}},
          {move,{x,1},{x,0}},
          {deallocate,3},
          return,
          {label,168},
          {test,is_tuple,{f,169},[{x,0}]},
          {test,test_arity,{f,166},[{x,0},3]},
          {test,is_tuple,{f,166},[{x,1}]},
          {test,test_arity,{f,166},[{x,1},4]},
          {allocate_heap,3,4,2},
          {get_tuple_element,{x,0},0,{x,2}},
          {get_tuple_element,{x,0},1,{x,3}},
          {get_tuple_element,{x,0},2,{x,4}},
          {get_tuple_element,{x,1},0,{y,0}},
          {get_tuple_element,{x,1},1,{y,1}},
          {get_tuple_element,{x,1},2,{y,2}},
          {get_tuple_element,{x,1},3,{x,1}},
          {put_tuple,3,{x,0}},
          {put,{x,2}},
          {put,{x,3}},
          {put,{x,4}},
          {line,144},
          {call,2,{adtgraph,putAVLT,2}},
          {test_heap,5,1},
          {put_tuple,4,{x,1}},
          {put,{y,0}},
          {put,{y,1}},
          {put,{y,2}},
          {put,{x,0}},
          {move,{x,1},{x,0}},
          {deallocate,3},
          return,
          {label,169},
          {test,is_nil,{f,166},[{x,0}]},
          {test,is_tuple,{f,166},[{x,1}]},
          {test,test_arity,{f,166},[{x,1},4]},
          {test_heap,5,2},
          {get_tuple_element,{x,1},0,{x,2}},
          {get_tuple_element,{x,1},1,{x,3}},
          {get_tuple_element,{x,1},2,{x,4}},
          {get_tuple_element,{x,1},3,{x,5}},
          {put_tuple,4,{x,0}},
          {put,{x,2}},
          {put,{x,3}},
          {put,{x,4}},
          {put,{x,5}},
          return]},
     {function,del_source,2,171,
         [{line,145},
          {label,170},
          {func_info,{atom,adtgraph},{atom,del_source},2},
          {label,171},
          {test,is_nonempty_list,{f,172},[{x,0}]},
          {get_list,{x,0},{x,2},{x,3}},
          {test,is_tuple,{f,170},[{x,1}]},
          {test,test_arity,{f,173},[{x,1},4]},
          {allocate_heap,1,5,4},
          {get_tuple_element,{x,1},0,{x,4}},
          {get_tuple_element,{x,1},1,{x,5}},
          {get_tuple_element,{x,1},2,{x,6}},
          {get_tuple_element,{x,1},3,{x,7}},
          {move,{x,3},{y,0}},
          {put_tuple,4,{x,1}},
          {put,{x,4}},
          {put,{x,5}},
          {put,{x,6}},
          {put,{x,7}},
          {move,{x,2},{x,0}},
          {line,146},
          {call,2,{adtgraph,del_source,2}},
          {move,{x,0},{x,1}},
          {move,{y,0},{x,0}},
          {call_last,2,{adtgraph,del_source,2},1},
          {label,172},
          {test,is_nil,{f,173},[{x,0}]},
          {test,is_tuple,{f,170},[{x,1}]},
          {test,test_arity,{f,173},[{x,1},4]},
          {test_heap,5,2},
          {get_tuple_element,{x,1},0,{x,2}},
          {get_tuple_element,{x,1},1,{x,3}},
          {get_tuple_element,{x,1},2,{x,4}},
          {get_tuple_element,{x,1},3,{x,5}},
          {put_tuple,4,{x,0}},
          {put,{x,2}},
          {put,{x,3}},
          {put,{x,4}},
          {put,{x,5}},
          return,
          {label,173},
          {test,is_tuple,{f,170},[{x,1}]},
          {test,test_arity,{f,170},[{x,1},4]},
          {allocate,3,2},
          {get_tuple_element,{x,1},1,{y,2}},
          {get_tuple_element,{x,1},2,{y,1}},
          {get_tuple_element,{x,1},3,{y,0}},
          {get_tuple_element,{x,1},0,{x,1}},
          {line,147},
          {call,2,{adtgraph,delSL,2}},
          {test_heap,5,1},
          {put_tuple,4,{x,1}},
          {put,{x,0}},
          {put,{y,2}},
          {put,{y,1}},
          {put,{y,0}},
          {move,{x,1},{x,0}},
          {deallocate,3},
          return]},
     {function,del_target,2,175,
         [{line,148},
          {label,174},
          {func_info,{atom,adtgraph},{atom,del_target},2},
          {label,175},
          {test,is_nonempty_list,{f,176},[{x,0}]},
          {get_list,{x,0},{x,2},{x,3}},
          {test,is_tuple,{f,174},[{x,1}]},
          {test,test_arity,{f,177},[{x,1},4]},
          {allocate_heap,1,5,4},
          {get_tuple_element,{x,1},0,{x,4}},
          {get_tuple_element,{x,1},1,{x,5}},
          {get_tuple_element,{x,1},2,{x,6}},
          {get_tuple_element,{x,1},3,{x,7}},
          {move,{x,3},{y,0}},
          {put_tuple,4,{x,1}},
          {put,{x,4}},
          {put,{x,5}},
          {put,{x,6}},
          {put,{x,7}},
          {move,{x,2},{x,0}},
          {line,149},
          {call,2,{adtgraph,del_target,2}},
          {move,{x,0},{x,1}},
          {move,{y,0},{x,0}},
          {call_last,2,{adtgraph,del_target,2},1},
          {label,176},
          {test,is_nil,{f,177},[{x,0}]},
          {test,is_tuple,{f,174},[{x,1}]},
          {test,test_arity,{f,177},[{x,1},4]},
          {test_heap,5,2},
          {get_tuple_element,{x,1},0,{x,2}},
          {get_tuple_element,{x,1},1,{x,3}},
          {get_tuple_element,{x,1},2,{x,4}},
          {get_tuple_element,{x,1},3,{x,5}},
          {put_tuple,4,{x,0}},
          {put,{x,2}},
          {put,{x,3}},
          {put,{x,4}},
          {put,{x,5}},
          return,
          {label,177},
          {test,is_tuple,{f,174},[{x,1}]},
          {test,test_arity,{f,174},[{x,1},4]},
          {allocate,3,2},
          {get_tuple_element,{x,1},0,{y,2}},
          {get_tuple_element,{x,1},2,{y,1}},
          {get_tuple_element,{x,1},3,{y,0}},
          {get_tuple_element,{x,1},1,{x,1}},
          {line,150},
          {call,2,{adtgraph,delSL,2}},
          {test_heap,5,1},
          {put_tuple,4,{x,1}},
          {put,{y,2}},
          {put,{x,0}},
          {put,{y,1}},
          {put,{y,0}},
          {move,{x,1},{x,0}},
          {deallocate,3},
          return]},
     {function,del_stattr,2,179,
         [{line,151},
          {label,178},
          {func_info,{atom,adtgraph},{atom,del_stattr},2},
          {label,179},
          {test,is_nonempty_list,{f,180},[{x,0}]},
          {get_list,{x,0},{x,2},{x,3}},
          {test,is_tuple,{f,178},[{x,1}]},
          {test,test_arity,{f,178},[{x,1},4]},
          {allocate_heap,1,5,4},
          {get_tuple_element,{x,1},0,{x,4}},
          {get_tuple_element,{x,1},1,{x,5}},
          {get_tuple_element,{x,1},2,{x,6}},
          {get_tuple_element,{x,1},3,{x,7}},
          {move,{x,3},{y,0}},
          {put_tuple,4,{x,1}},
          {put,{x,4}},
          {put,{x,5}},
          {put,{x,6}},
          {put,{x,7}},
          {move,{x,2},{x,0}},
          {line,152},
          {call,2,{adtgraph,del_stattr,2}},
          {move,{x,0},{x,1}},
          {move,{y,0},{x,0}},
          {call_last,2,{adtgraph,del_stattr,2},1},
          {label,180},
          {test,is_tuple,{f,183},[{x,0}]},
          {select_tuple_arity,{x,0},{f,178},{list,[1,{f,181},3,{f,182}]}},
          {label,181},
          {test,is_tuple,{f,178},[{x,1}]},
          {test,test_arity,{f,178},[{x,1},4]},
          {allocate_heap,3,2,2},
          {get_tuple_element,{x,0},0,{x,2}},
          {get_tuple_element,{x,1},0,{y,0}},
          {get_tuple_element,{x,1},1,{y,1}},
          {get_tuple_element,{x,1},2,{y,2}},
          {get_tuple_element,{x,1},3,{x,1}},
          {put_tuple,1,{x,0}},
          {put,{x,2}},
          {line,153},
          {call,2,{adtgraph,delAVLT,2}},
          {test_heap,5,1},
          {put_tuple,4,{x,1}},
          {put,{y,0}},
          {put,{y,1}},
          {put,{y,2}},
          {put,{x,0}},
          {move,{x,1},{x,0}},
          {deallocate,3},
          return,
          {label,182},
          {test,is_tuple,{f,178},[{x,1}]},
          {test,test_arity,{f,178},[{x,1},4]},
          {allocate_heap,3,4,2},
          {get_tuple_element,{x,0},0,{x,2}},
          {get_tuple_element,{x,0},1,{x,3}},
          {get_tuple_element,{x,0},2,{x,4}},
          {get_tuple_element,{x,1},0,{y,0}},
          {get_tuple_element,{x,1},1,{y,1}},
          {get_tuple_element,{x,1},2,{y,2}},
          {get_tuple_element,{x,1},3,{x,1}},
          {put_tuple,3,{x,0}},
          {put,{x,2}},
          {put,{x,3}},
          {put,{x,4}},
          {line,154},
          {call,2,{adtgraph,delAVLT,2}},
          {test_heap,5,1},
          {put_tuple,4,{x,1}},
          {put,{y,0}},
          {put,{y,1}},
          {put,{y,2}},
          {put,{x,0}},
          {move,{x,1},{x,0}},
          {deallocate,3},
          return,
          {label,183},
          {test,is_nil,{f,178},[{x,0}]},
          {test,is_tuple,{f,178},[{x,1}]},
          {test,test_arity,{f,178},[{x,1},4]},
          {test_heap,5,2},
          {get_tuple_element,{x,1},0,{x,2}},
          {get_tuple_element,{x,1},1,{x,3}},
          {get_tuple_element,{x,1},2,{x,4}},
          {get_tuple_element,{x,1},3,{x,5}},
          {put_tuple,4,{x,0}},
          {put,{x,2}},
          {put,{x,3}},
          {put,{x,4}},
          {put,{x,5}},
          return]},
     {function,get_source,1,185,
         [{line,155},
          {label,184},
          {func_info,{atom,adtgraph},{atom,get_source},1},
          {label,185},
          {test,is_tuple,{f,184},[{x,0}]},
          {test,test_arity,{f,184},[{x,0},4]},
          {get_tuple_element,{x,0},0,{x,0}},
          return]},
     {function,get_target,1,187,
         [{line,156},
          {label,186},
          {func_info,{atom,adtgraph},{atom,get_target},1},
          {label,187},
          {test,is_tuple,{f,186},[{x,0}]},
          {test,test_arity,{f,186},[{x,0},4]},
          {get_tuple_element,{x,0},1,{x,0}},
          return]},
     {function,get_vattr,1,189,
         [{line,157},
          {label,188},
          {func_info,{atom,adtgraph},{atom,get_vattr},1},
          {label,189},
          {test,is_tuple,{f,188},[{x,0}]},
          {test,test_arity,{f,188},[{x,0},4]},
          {get_tuple_element,{x,0},2,{x,0}},
          return]},
     {function,get_vattr,2,191,
         [{line,158},
          {label,190},
          {func_info,{atom,adtgraph},{atom,get_vattr},2},
          {label,191},
          {test,is_tuple,{f,190},[{x,1}]},
          {test,test_arity,{f,190},[{x,1},4]},
          {get_tuple_element,{x,1},2,{x,2}},
          {test,is_nonempty_list,{f,193},[{x,2}]},
          {get_list,{x,2},{x,3},{x,4}},
          {test,is_tuple,{f,190},[{x,3}]},
          {test,test_arity,{f,190},[{x,3},2]},
          {get_tuple_element,{x,3},0,{x,5}},
          {test,is_eq_exact,{f,192},[{x,5},{x,0}]},
          {get_tuple_element,{x,3},1,{x,0}},
          return,
          {label,192},
          {test_heap,5,5},
          {put_tuple,4,{x,1}},
          {put,nil},
          {put,nil},
          {put,{x,4}},
          {put,nil},
          {call_only,2,{adtgraph,get_vattr,2}},
          {label,193},
          {test,is_nil,{f,190},[{x,2}]},
          {move,{atom,nil},{x,0}},
          return]},
     {function,get_stattr,1,195,
         [{line,159},
          {label,194},
          {func_info,{atom,adtgraph},{atom,get_stattr},1},
          {label,195},
          {test,is_tuple,{f,194},[{x,0}]},
          {test,test_arity,{f,194},[{x,0},4]},
          {get_tuple_element,{x,0},3,{x,0}},
          return]},
     {function,get_stattr,3,197,
         [{line,160},
          {label,196},
          {func_info,{atom,adtgraph},{atom,get_stattr},3},
          {label,197},
          {test,is_tuple,{f,196},[{x,2}]},
          {test,test_arity,{f,196},[{x,2},4]},
          {get_tuple_element,{x,2},3,{x,3}},
          {test,is_nonempty_list,{f,199},[{x,3}]},
          {get_list,{x,3},{x,4},{x,5}},
          {test,is_tuple,{f,196},[{x,4}]},
          {test,test_arity,{f,196},[{x,4},3]},
          {get_tuple_element,{x,4},0,{x,6}},
          {get_tuple_element,{x,4},1,{x,7}},
          {get_tuple_element,{x,4},2,{x,8}},
          {test,is_eq_exact,{f,198},[{x,6},{x,0}]},
          {test,is_eq_exact,{f,198},[{x,7},{x,1}]},
          {move,{x,8},{x,0}},
          return,
          {label,198},
          {test_heap,5,6},
          {put_tuple,4,{x,2}},
          {put,nil},
          {put,nil},
          {put,nil},
          {put,{x,5}},
          {call_only,3,{adtgraph,get_stattr,3}},
          {label,199},
          {test,is_nil,{f,196},[{x,3}]},
          {move,{atom,nil},{x,0}},
          return]},
     {function,unionVS,2,201,
         [{line,161},
          {label,200},
          {func_info,{atom,adtgraph},{atom,unionVS},2},
          {label,201},
          {test,is_tuple,{f,200},[{x,0}]},
          {test,test_arity,{f,200},[{x,0},4]},
          {test,is_tuple,{f,200},[{x,1}]},
          {test,test_arity,{f,200},[{x,1},4]},
          {allocate_heap,7,5,2},
          {get_tuple_element,{x,0},1,{y,4}},
          {get_tuple_element,{x,0},2,{y,5}},
          {get_tuple_element,{x,0},3,{y,6}},
          {get_tuple_element,{x,1},0,{y,0}},
          {get_tuple_element,{x,1},1,{y,1}},
          {get_tuple_element,{x,1},2,{y,2}},
          {get_tuple_element,{x,1},3,{y,3}},
          {put_tuple,4,{x,1}},
          {put,{y,0}},
          {put,{y,1}},
          {put,{y,2}},
          {put,{y,3}},
          {get_tuple_element,{x,0},0,{x,0}},
          {line,162},
          {call,2,{adtgraph,ins_source,2}},
          {line,162},
          {call,1,{adtgraph,get_source,1}},
          {test_heap,5,1},
          {put_tuple,4,{x,1}},
          {put,{y,0}},
          {put,{y,1}},
          {put,{y,2}},
          {put,{y,3}},
          {move,{x,0},{x,2}},
          {move,{y,4},{x,0}},
          {move,{x,2},{y,4}},
          {line,163},
          {call,2,{adtgraph,ins_target,2}},
          {line,163},
          {call,1,{adtgraph,get_target,1}},
          {test_heap,5,1},
          {put_tuple,4,{x,1}},
          {put,{y,0}},
          {put,{y,1}},
          {put,{y,2}},
          {put,{y,3}},
          {move,{x,0},{x,2}},
          {move,{y,5},{x,0}},
          {move,{x,2},{y,5}},
          {line,164},
          {call,2,{adtgraph,ins_vattr,2}},
          {line,164},
          {call,1,{adtgraph,get_vattr,1}},
          {test_heap,5,1},
          {put_tuple,4,{x,1}},
          {put,{y,0}},
          {put,{y,1}},
          {put,{y,2}},
          {put,{y,3}},
          {move,{x,0},{y,3}},
          {move,{y,6},{x,0}},
          {move,{y,3},{y,6}},
          {trim,4,3},
          {line,165},
          {call,2,{adtgraph,ins_stattr,2}},
          {line,165},
          {call,1,{adtgraph,get_stattr,1}},
          {test_heap,5,1},
          {put_tuple,4,{x,1}},
          {put,{y,0}},
          {put,{y,1}},
          {put,{y,2}},
          {put,{x,0}},
          {move,{x,1},{x,0}},
          {deallocate,3},
          return]},
     {function,initBT,0,203,
         [{line,166},
          {label,202},
          {func_info,{atom,adtgraph},{atom,initBT},0},
          {label,203},
          {move,{literal,{}},{x,0}},
          return]},
     {function,insertBT,3,205,
         [{line,167},
          {label,204},
          {func_info,{atom,adtgraph},{atom,insertBT},3},
          {label,205},
          {test,is_tuple,{f,204},[{x,0}]},
          {select_tuple_arity,{x,0},{f,204},{list,[5,{f,206},0,{f,210}]}},
          {label,206},
          {get_tuple_element,{x,0},0,{x,3}},
          {get_tuple_element,{x,0},1,{x,4}},
          {get_tuple_element,{x,0},2,{x,5}},
          {get_tuple_element,{x,0},3,{x,6}},
          {get_tuple_element,{x,0},4,{x,7}},
          {test,is_eq_exact,{f,207},[{x,1},{x,3}]},
          {allocate,4,8},
          {move,{x,7},{x,1}},
          {move,{x,2},{x,0}},
          {move,{x,6},{y,0}},
          {move,{x,5},{y,1}},
          {move,{x,4},{y,2}},
          {move,{x,3},{y,3}},
          {line,168},
          {call,2,{adtgraph,unionVS,2}},
          {test_heap,6,1},
          {put_tuple,5,{x,1}},
          {put,{y,3}},
          {put,{y,2}},
          {put,{y,1}},
          {put,{y,0}},
          {put,{x,0}},
          {move,{x,1},{x,0}},
          {deallocate,4},
          return,
          {label,207},
          {allocate_zero,4,8},
          {move,{x,7},{y,2}},
          {move,{x,3},{y,3}},
          {test,is_lt,{f,208},[{x,1},{x,3}]},
          {move,{x,5},{x,0}},
          {move,{x,6},{y,1}},
          {line,169},
          {call,3,{adtgraph,insertBT,3}},
          {move,{x,0},{x,1}},
          {move,{y,1},{x,2}},
          {jump,{f,209}},
          {label,208},
          {move,{x,6},{x,0}},
          {move,{x,5},{y,1}},
          {line,170},
          {call,3,{adtgraph,insertBT,3}},
          {move,{y,1},{x,1}},
          {move,{x,0},{x,2}},
          {label,209},
          {move,{x,1},{x,0}},
          {move,{x,2},{x,1}},
          {move,{x,1},{y,0}},
          {move,{x,0},{y,1}},
          {line,171},
          {call,2,{adtgraph,neueHoehe,2}},
          {test_heap,6,1},
          {put_tuple,5,{x,1}},
          {put,{y,3}},
          {put,{x,0}},
          {put,{y,1}},
          {put,{y,0}},
          {put,{y,2}},
          {move,{x,1},{x,0}},
          {call_last,1,{adtgraph,checkBalance,1},4},
          {label,210},
          {allocate,3,3},
          {init,{y,0}},
          {move,{x,2},{y,1}},
          {move,{x,1},{y,2}},
          {line,167},
          {call,0,{adtgraph,initBT,0}},
          {move,{x,0},{y,0}},
          {line,167},
          {call,0,{adtgraph,initBT,0}},
          {test_heap,6,1},
          {put_tuple,5,{x,1}},
          {put,{y,2}},
          {put,{integer,1}},
          {put,{y,0}},
          {put,{x,0}},
          {put,{y,1}},
          {move,{x,1},{x,0}},
          {deallocate,3},
          return]},
     {function,insertOVBT,3,212,
         [{line,172},
          {label,211},
          {func_info,{atom,adtgraph},{atom,insertOVBT},3},
          {label,212},
          {test,is_tuple,{f,211},[{x,0}]},
          {select_tuple_arity,{x,0},{f,211},{list,[5,{f,213},0,{f,217}]}},
          {label,213},
          {get_tuple_element,{x,0},0,{x,3}},
          {get_tuple_element,{x,0},1,{x,4}},
          {get_tuple_element,{x,0},2,{x,5}},
          {get_tuple_element,{x,0},3,{x,6}},
          {test,is_eq_exact,{f,214},[{x,1},{x,3}]},
          {test_heap,6,7},
          {put_tuple,5,{x,0}},
          {put,{x,3}},
          {put,{x,4}},
          {put,{x,5}},
          {put,{x,6}},
          {put,{x,2}},
          return,
          {label,214},
          {allocate_zero,4,7},
          {get_tuple_element,{x,0},4,{y,3}},
          {move,{x,3},{y,2}},
          {test,is_lt,{f,215},[{x,1},{x,3}]},
          {move,{x,5},{x,0}},
          {move,{x,6},{y,1}},
          {line,173},
          {call,3,{adtgraph,insertOVBT,3}},
          {move,{x,0},{x,1}},
          {move,{y,1},{x,2}},
          {jump,{f,216}},
          {label,215},
          {move,{x,6},{x,0}},
          {move,{x,5},{y,1}},
          {line,174},
          {call,3,{adtgraph,insertOVBT,3}},
          {move,{y,1},{x,1}},
          {move,{x,0},{x,2}},
          {label,216},
          {move,{x,1},{x,0}},
          {move,{x,2},{x,1}},
          {move,{x,1},{y,0}},
          {move,{x,0},{y,1}},
          {line,175},
          {call,2,{adtgraph,neueHoehe,2}},
          {test_heap,6,1},
          {put_tuple,5,{x,1}},
          {put,{y,2}},
          {put,{x,0}},
          {put,{y,1}},
          {put,{y,0}},
          {put,{y,3}},
          {move,{x,1},{x,0}},
          {call_last,1,{adtgraph,checkBalance,1},4},
          {label,217},
          {allocate,3,3},
          {init,{y,0}},
          {move,{x,2},{y,1}},
          {move,{x,1},{y,2}},
          {line,172},
          {call,0,{adtgraph,initBT,0}},
          {move,{x,0},{y,0}},
          {line,172},
          {call,0,{adtgraph,initBT,0}},
          {test_heap,6,1},
          {put_tuple,5,{x,1}},
          {put,{y,2}},
          {put,{integer,1}},
          {put,{y,0}},
          {put,{x,0}},
          {put,{y,1}},
          {move,{x,1},{x,0}},
          {deallocate,3},
          return]},
     {function,deleteBT,2,219,
         [{line,176},
          {label,218},
          {func_info,{atom,adtgraph},{atom,deleteBT},2},
          {label,219},
          {test,is_tuple,{f,218},[{x,0}]},
          {select_tuple_arity,{x,0},{f,218},{list,[5,{f,220},0,{f,226}]}},
          {label,220},
          {get_tuple_element,{x,0},0,{x,2}},
          {get_tuple_element,{x,0},2,{x,3}},
          {get_tuple_element,{x,0},3,{x,4}},
          {get_tuple_element,{x,0},4,{x,5}},
          {test,is_eq_exact,{f,221},[{x,3},{literal,{}}]},
          {test,is_eq_exact,{f,221},[{x,4},{literal,{}}]},
          {test,is_eq_exact,{f,223},[{x,1},{x,2}]},
          {jump,{f,226}},
          {label,221},
          {test,is_eq_exact,{f,223},[{x,1},{x,2}]},
          {allocate_zero,4,5},
          {move,{x,3},{x,0}},
          {move,{x,4},{y,2}},
          {move,{x,0},{y,3}},
          {line,177},
          {call,1,{adtgraph,getHoehe,1}},
          {move,{x,0},{y,1}},
          {move,{y,2},{x,0}},
          {line,177},
          {call,1,{adtgraph,getHoehe,1}},
          {test,is_lt,{f,222},[{y,1},{x,0}]},
          {move,{atom,min},{x,1}},
          {move,{y,2},{x,0}},
          {init,{y,1}},
          {init,{y,2}},
          {line,178},
          {call,2,{adtgraph,deleteMinMax,2}},
          {test,is_tuple,{f,227},[{x,0}]},
          {test,test_arity,{f,227},[{x,0},3]},
          {get_tuple_element,{x,0},0,{x,1}},
          {get_tuple_element,{x,0},1,{y,1}},
          {get_tuple_element,{x,0},2,{y,0}},
          {move,{y,3},{x,0}},
          {move,{x,1},{y,2}},
          {line,179},
          {call,2,{adtgraph,neueHoehe,2}},
          {test_heap,6,1},
          {put_tuple,5,{x,1}},
          {put,{y,1}},
          {put,{x,0}},
          {put,{y,3}},
          {put,{y,2}},
          {put,{y,0}},
          {move,{x,1},{x,0}},
          {call_last,1,{adtgraph,checkBalance,1},4},
          {label,222},
          {move,{atom,max},{x,1}},
          {move,{y,3},{x,0}},
          {init,{y,1}},
          {init,{y,3}},
          {line,180},
          {call,2,{adtgraph,deleteMinMax,2}},
          {test,is_tuple,{f,228},[{x,0}]},
          {test,test_arity,{f,228},[{x,0},3]},
          {get_tuple_element,{x,0},1,{y,1}},
          {get_tuple_element,{x,0},2,{y,0}},
          {get_tuple_element,{x,0},0,{x,0}},
          {move,{y,2},{x,1}},
          {move,{x,0},{y,3}},
          {line,181},
          {call,2,{adtgraph,neueHoehe,2}},
          {test_heap,6,1},
          {put_tuple,5,{x,1}},
          {put,{y,1}},
          {put,{x,0}},
          {put,{y,3}},
          {put,{y,2}},
          {put,{y,0}},
          {move,{x,1},{x,0}},
          {call_last,1,{adtgraph,checkBalance,1},4},
          {label,223},
          {allocate_zero,4,6},
          {move,{x,2},{y,2}},
          {move,{x,5},{y,3}},
          {test,is_lt,{f,224},[{x,1},{x,2}]},
          {move,{x,3},{x,0}},
          {move,{x,4},{y,1}},
          {line,182},
          {call,2,{adtgraph,deleteBT,2}},
          {move,{x,0},{x,1}},
          {move,{y,1},{x,2}},
          {jump,{f,225}},
          {label,224},
          {move,{x,4},{x,0}},
          {move,{x,3},{y,1}},
          {line,183},
          {call,2,{adtgraph,deleteBT,2}},
          {move,{x,0},{x,2}},
          {move,{y,1},{x,1}},
          {label,225},
          {move,{x,1},{x,0}},
          {move,{x,2},{x,1}},
          {move,{x,1},{y,0}},
          {move,{x,0},{y,1}},
          {line,184},
          {call,2,{adtgraph,neueHoehe,2}},
          {test_heap,6,1},
          {put_tuple,5,{x,1}},
          {put,{y,2}},
          {put,{x,0}},
          {put,{y,1}},
          {put,{y,0}},
          {put,{y,3}},
          {move,{x,1},{x,0}},
          {call_last,1,{adtgraph,checkBalance,1},4},
          {label,226},
          {move,{literal,{}},{x,0}},
          return,
          {label,227},
          {line,178},
          {badmatch,{x,0}},
          {label,228},
          {line,180},
          {badmatch,{x,0}}]},
     {function,deleteMinMax,2,230,
         [{line,185},
          {label,229},
          {func_info,{atom,adtgraph},{atom,deleteMinMax},2},
          {label,230},
          {test,is_tuple,{f,229},[{x,0}]},
          {test,test_arity,{f,229},[{x,0},5]},
          {get_tuple_element,{x,0},0,{x,2}},
          {get_tuple_element,{x,0},2,{x,3}},
          {get_tuple_element,{x,0},3,{x,4}},
          {get_tuple_element,{x,0},4,{x,5}},
          {select_val,
              {x,1},
              {f,229},
              {list,[{atom,min},{f,231},{atom,max},{f,234}]}},
          {label,231},
          {allocate,6,6},
          {init,{y,0}},
          {move,{x,3},{x,0}},
          {move,{x,1},{y,1}},
          {move,{x,0},{y,2}},
          {move,{x,2},{y,3}},
          {move,{x,5},{y,4}},
          {move,{x,4},{y,5}},
          {line,186},
          {call,1,{adtgraph,isEmptyBT,1}},
          {test,is_atom,{f,238},[{x,0}]},
          {select_val,
              {x,0},
              {f,238},
              {list,[{atom,true},{f,232},{atom,false},{f,233}]}},
          {label,232},
          {test_heap,4,0},
          {put_tuple,3,{x,0}},
          {put,{y,5}},
          {put,{y,3}},
          {put,{y,4}},
          {deallocate,6},
          return,
          {label,233},
          {move,{y,1},{x,1}},
          {move,{y,2},{x,0}},
          {init,{y,1}},
          {init,{y,2}},
          {line,187},
          {call,2,{adtgraph,deleteMinMax,2}},
          {test,is_tuple,{f,237},[{x,0}]},
          {test,test_arity,{f,237},[{x,0},3]},
          {get_tuple_element,{x,0},1,{y,2}},
          {get_tuple_element,{x,0},2,{y,1}},
          {get_tuple_element,{x,0},0,{x,0}},
          {move,{y,5},{x,1}},
          {move,{x,0},{y,0}},
          {line,188},
          {call,2,{adtgraph,neueHoehe,2}},
          {test_heap,6,1},
          {put_tuple,5,{x,1}},
          {put,{y,3}},
          {put,{x,0}},
          {put,{y,0}},
          {put,{y,5}},
          {put,{y,4}},
          {init,{y,3}},
          {init,{y,4}},
          {init,{y,5}},
          {trim,1,5},
          {move,{x,1},{x,0}},
          {line,188},
          {call,1,{adtgraph,checkBalance,1}},
          {test_heap,4,1},
          {put_tuple,3,{x,1}},
          {put,{x,0}},
          {put,{y,1}},
          {put,{y,0}},
          {move,{x,1},{x,0}},
          {deallocate,5},
          return,
          {label,234},
          {allocate,6,6},
          {init,{y,0}},
          {move,{x,4},{x,0}},
          {move,{x,1},{y,1}},
          {move,{x,3},{y,2}},
          {move,{x,2},{y,3}},
          {move,{x,5},{y,4}},
          {move,{x,0},{y,5}},
          {line,189},
          {call,1,{adtgraph,isEmptyBT,1}},
          {test,is_atom,{f,240},[{x,0}]},
          {select_val,
              {x,0},
              {f,240},
              {list,[{atom,true},{f,235},{atom,false},{f,236}]}},
          {label,235},
          {test_heap,4,0},
          {put_tuple,3,{x,0}},
          {put,{y,2}},
          {put,{y,3}},
          {put,{y,4}},
          {deallocate,6},
          return,
          {label,236},
          {move,{y,1},{x,1}},
          {move,{y,5},{x,0}},
          {init,{y,1}},
          {init,{y,5}},
          {line,190},
          {call,2,{adtgraph,deleteMinMax,2}},
          {test,is_tuple,{f,239},[{x,0}]},
          {test,test_arity,{f,239},[{x,0},3]},
          {get_tuple_element,{x,0},0,{x,1}},
          {get_tuple_element,{x,0},1,{y,5}},
          {get_tuple_element,{x,0},2,{y,1}},
          {move,{y,2},{x,0}},
          {move,{x,1},{y,0}},
          {line,191},
          {call,2,{adtgraph,neueHoehe,2}},
          {test_heap,6,1},
          {put_tuple,5,{x,1}},
          {put,{y,3}},
          {put,{x,0}},
          {put,{y,2}},
          {put,{y,0}},
          {put,{y,4}},
          {move,{x,1},{x,0}},
          {move,{y,1},{y,4}},
          {trim,4,2},
          {line,191},
          {call,1,{adtgraph,checkBalance,1}},
          {test_heap,4,1},
          {put_tuple,3,{x,1}},
          {put,{x,0}},
          {put,{y,1}},
          {put,{y,0}},
          {move,{x,1},{x,0}},
          {deallocate,2},
          return,
          {label,237},
          {line,187},
          {badmatch,{x,0}},
          {label,238},
          {line,186},
          {case_end,{x,0}},
          {label,239},
          {line,190},
          {badmatch,{x,0}},
          {label,240},
          {line,189},
          {case_end,{x,0}}]},
     {function,findBT,2,242,
         [{line,192},
          {label,241},
          {func_info,{atom,adtgraph},{atom,findBT},2},
          {label,242},
          {test,is_tuple,{f,241},[{x,0}]},
          {select_tuple_arity,{x,0},{f,241},{list,[5,{f,243},0,{f,246}]}},
          {label,243},
          {get_tuple_element,{x,0},0,{x,2}},
          {test,is_eq_exact,{f,244},[{x,1},{x,2}]},
          {get_tuple_element,{x,0},4,{x,0}},
          return,
          {label,244},
          {test,is_lt,{f,245},[{x,1},{x,2}]},
          {get_tuple_element,{x,0},2,{x,0}},
          {call_only,2,{adtgraph,findBT,2}},
          {label,245},
          {get_tuple_element,{x,0},3,{x,0}},
          {call_only,2,{adtgraph,findBT,2}},
          {label,246},
          {call_only,0,{adtgraph,initVTS,0}}]},
     {function,leftR,1,248,
         [{line,193},
          {label,247},
          {func_info,{atom,adtgraph},{atom,leftR},1},
          {label,248},
          {test,is_tuple,{f,247},[{x,0}]},
          {test,test_arity,{f,247},[{x,0},5]},
          {get_tuple_element,{x,0},0,{x,1}},
          {get_tuple_element,{x,0},2,{x,2}},
          {get_tuple_element,{x,0},3,{x,3}},
          {test,is_tuple,{f,247},[{x,3}]},
          {test,test_arity,{f,247},[{x,3},5]},
          {allocate,8,4},
          {init,{y,0}},
          {get_tuple_element,{x,0},4,{y,1}},
          {get_tuple_element,{x,3},0,{y,5}},
          {get_tuple_element,{x,3},3,{y,7}},
          {get_tuple_element,{x,3},4,{y,6}},
          {move,{x,1},{y,3}},
          {get_tuple_element,{x,3},2,{x,1}},
          {move,{x,2},{x,0}},
          {move,{x,0},{y,2}},
          {move,{x,1},{y,4}},
          {line,194},
          {call,2,{adtgraph,neueHoehe,2}},
          {test_heap,6,1},
          {move,{x,0},{y,0}},
          {put_tuple,5,{x,0}},
          {put,{y,3}},
          {put,{y,0}},
          {put,{y,2}},
          {put,{y,4}},
          {put,{y,1}},
          {move,{y,7},{x,1}},
          {line,195},
          {call,2,{adtgraph,neueHoehe,2}},
          {test_heap,12,1},
          {put_tuple,5,{x,1}},
          {put,{y,3}},
          {put,{y,0}},
          {put,{y,2}},
          {put,{y,4}},
          {put,{y,1}},
          {put_tuple,5,{x,2}},
          {put,{y,5}},
          {put,{x,0}},
          {put,{x,1}},
          {put,{y,7}},
          {put,{y,6}},
          {move,{x,2},{x,0}},
          {deallocate,8},
          return]},
     {function,rightR,1,250,
         [{line,196},
          {label,249},
          {func_info,{atom,adtgraph},{atom,rightR},1},
          {label,250},
          {test,is_tuple,{f,249},[{x,0}]},
          {test,test_arity,{f,249},[{x,0},5]},
          {get_tuple_element,{x,0},0,{x,1}},
          {get_tuple_element,{x,0},2,{x,2}},
          {test,is_tuple,{f,249},[{x,2}]},
          {test,test_arity,{f,249},[{x,2},5]},
          {allocate,8,3},
          {init,{y,0}},
          {get_tuple_element,{x,0},4,{y,1}},
          {get_tuple_element,{x,2},0,{y,5}},
          {get_tuple_element,{x,2},2,{y,7}},
          {get_tuple_element,{x,2},4,{y,6}},
          {move,{x,1},{y,3}},
          {get_tuple_element,{x,2},3,{x,1}},
          {get_tuple_element,{x,0},3,{x,0}},
          {move,{x,0},{y,2}},
          {move,{x,1},{y,4}},
          {line,197},
          {call,2,{adtgraph,neueHoehe,2}},
          {test_heap,6,1},
          {move,{x,0},{y,0}},
          {put_tuple,5,{x,1}},
          {put,{y,3}},
          {put,{y,0}},
          {put,{y,4}},
          {put,{y,2}},
          {put,{y,1}},
          {move,{y,7},{x,0}},
          {line,198},
          {call,2,{adtgraph,neueHoehe,2}},
          {test_heap,12,1},
          {put_tuple,5,{x,1}},
          {put,{y,3}},
          {put,{y,0}},
          {put,{y,4}},
          {put,{y,2}},
          {put,{y,1}},
          {put_tuple,5,{x,2}},
          {put,{y,5}},
          {put,{x,0}},
          {put,{y,7}},
          {put,{x,1}},
          {put,{y,6}},
          {move,{x,2},{x,0}},
          {deallocate,8},
          return]},
     {function,ddrightR,1,252,
         [{line,199},
          {label,251},
          {func_info,{atom,adtgraph},{atom,ddrightR},1},
          {label,252},
          {test,is_tuple,{f,251},[{x,0}]},
          {test,test_arity,{f,251},[{x,0},5]},
          {allocate,4,1},
          {get_tuple_element,{x,0},0,{y,3}},
          {get_tuple_element,{x,0},1,{y,2}},
          {get_tuple_element,{x,0},3,{y,1}},
          {get_tuple_element,{x,0},4,{y,0}},
          {get_tuple_element,{x,0},2,{x,0}},
          {line,200},
          {call,1,{adtgraph,leftR,1}},
          {test_heap,6,1},
          {put_tuple,5,{x,1}},
          {put,{y,3}},
          {put,{y,2}},
          {put,{x,0}},
          {put,{y,1}},
          {put,{y,0}},
          {move,{x,1},{x,0}},
          {call_last,1,{adtgraph,rightR,1},4}]},
     {function,ddleftR,1,254,
         [{line,201},
          {label,253},
          {func_info,{atom,adtgraph},{atom,ddleftR},1},
          {label,254},
          {test,is_tuple,{f,253},[{x,0}]},
          {test,test_arity,{f,253},[{x,0},5]},
          {allocate,4,1},
          {get_tuple_element,{x,0},0,{y,3}},
          {get_tuple_element,{x,0},1,{y,2}},
          {get_tuple_element,{x,0},2,{y,1}},
          {get_tuple_element,{x,0},4,{y,0}},
          {get_tuple_element,{x,0},3,{x,0}},
          {line,202},
          {call,1,{adtgraph,rightR,1}},
          {test_heap,6,1},
          {put_tuple,5,{x,1}},
          {put,{y,3}},
          {put,{y,2}},
          {put,{y,1}},
          {put,{x,0}},
          {put,{y,0}},
          {move,{x,1},{x,0}},
          {call_last,1,{adtgraph,leftR,1},4}]},
     {function,checkBalance,1,256,
         [{line,203},
          {label,255},
          {func_info,{atom,adtgraph},{atom,checkBalance},1},
          {label,256},
          {test,is_tuple,{f,255},[{x,0}]},
          {select_tuple_arity,{x,0},{f,255},{list,[5,{f,257},0,{f,263}]}},
          {label,257},
          {allocate,6,1},
          {init,{y,0}},
          {get_tuple_element,{x,0},0,{y,5}},
          {get_tuple_element,{x,0},1,{y,4}},
          {get_tuple_element,{x,0},3,{y,2}},
          {get_tuple_element,{x,0},4,{y,1}},
          {get_tuple_element,{x,0},2,{x,0}},
          {move,{x,0},{y,3}},
          {line,204},
          {call,1,{adtgraph,getHoehe,1}},
          {move,{x,0},{y,0}},
          {move,{y,2},{x,0}},
          {line,204},
          {call,1,{adtgraph,getHoehe,1}},
          {move,{x,0},{x,1}},
          {move,{y,0},{x,0}},
          {init,{y,0}},
          {line,204},
          {call,2,{adtgraph,balance,2}},
          {test,is_atom,{f,264},[{x,0}]},
          {select_val,
              {x,0},
              {f,264},
              {list,
                  [{atom,ok},
                   {f,258},
                   {atom,left},
                   {f,259},
                   {atom,right},
                   {f,261}]}},
          {label,258},
          {test_heap,6,0},
          {put_tuple,5,{x,0}},
          {put,{y,5}},
          {put,{y,4}},
          {put,{y,3}},
          {put,{y,2}},
          {put,{y,1}},
          {deallocate,6},
          return,
          {label,259},
          {move,{y,2},{x,0}},
          {line,205},
          {call,1,{adtgraph,balSide,1}},
          {test,is_eq_exact,{f,260},[{x,0},{atom,left}]},
          {test_heap,6,0},
          {put_tuple,5,{x,0}},
          {put,{y,5}},
          {put,{y,4}},
          {put,{y,3}},
          {put,{y,2}},
          {put,{y,1}},
          {call_last,1,{adtgraph,ddleftR,1},6},
          {label,260},
          {test_heap,6,0},
          {put_tuple,5,{x,0}},
          {put,{y,5}},
          {put,{y,4}},
          {put,{y,3}},
          {put,{y,2}},
          {put,{y,1}},
          {call_last,1,{adtgraph,leftR,1},6},
          {label,261},
          {move,{y,3},{x,0}},
          {line,206},
          {call,1,{adtgraph,balSide,1}},
          {test,is_eq_exact,{f,262},[{x,0},{atom,right}]},
          {test_heap,6,0},
          {put_tuple,5,{x,0}},
          {put,{y,5}},
          {put,{y,4}},
          {put,{y,3}},
          {put,{y,2}},
          {put,{y,1}},
          {call_last,1,{adtgraph,ddrightR,1},6},
          {label,262},
          {test_heap,6,0},
          {put_tuple,5,{x,0}},
          {put,{y,5}},
          {put,{y,4}},
          {put,{y,3}},
          {put,{y,2}},
          {put,{y,1}},
          {call_last,1,{adtgraph,rightR,1},6},
          {label,263},
          {move,{literal,{}},{x,0}},
          return,
          {label,264},
          {line,204},
          {case_end,{x,0}}]},
     {function,balSide,1,266,
         [{line,207},
          {label,265},
          {func_info,{atom,adtgraph},{atom,balSide},1},
          {label,266},
          {test,is_tuple,{f,265},[{x,0}]},
          {test,test_arity,{f,265},[{x,0},5]},
          {allocate,1,1},
          {get_tuple_element,{x,0},3,{y,0}},
          {get_tuple_element,{x,0},2,{x,0}},
          {line,208},
          {call,1,{adtgraph,getHoehe,1}},
          {move,{x,0},{x,1}},
          {move,{y,0},{x,0}},
          {move,{x,1},{y,0}},
          {line,208},
          {call,1,{adtgraph,getHoehe,1}},
          {move,{x,0},{x,1}},
          {move,{y,0},{x,0}},
          {init,{y,0}},
          {line,208},
          {call,2,{adtgraph,balVal,2}},
          {test,is_integer,{f,270},[{x,0}]},
          {select_val,
              {x,0},
              {f,270},
              {list,
                  [{integer,1},
                   {f,267},
                   {integer,0},
                   {f,268},
                   {integer,-1},
                   {f,269}]}},
          {label,267},
          {move,{atom,right},{x,0}},
          {deallocate,1},
          return,
          {label,268},
          {move,{atom,middle},{x,0}},
          {deallocate,1},
          return,
          {label,269},
          {move,{atom,left},{x,0}},
          {deallocate,1},
          return,
          {label,270},
          {move,{atom,error},{x,0}},
          {deallocate,1},
          return]},
     {function,balance,2,272,
         [{line,209},
          {label,271},
          {func_info,{atom,adtgraph},{atom,balance},2},
          {label,272},
          {allocate,0,2},
          {line,210},
          {call,2,{adtgraph,balVal,2}},
          {test,is_eq,{f,273},[{x,0},{integer,-2}]},
          {move,{atom,right},{x,0}},
          {deallocate,0},
          return,
          {label,273},
          {test,is_eq,{f,274},[{x,0},{integer,2}]},
          {move,{atom,left},{x,0}},
          {deallocate,0},
          return,
          {label,274},
          {test,is_lt,{f,275},[{x,0},{integer,-2}]},
          {move,{literal,"right balance**************\n"},{x,0}},
          {line,211},
          {call_ext,1,{extfunc,io,format,1}},
          {move,{atom,right},{x,0}},
          {deallocate,0},
          return,
          {label,275},
          {test,is_lt,{f,276},[{integer,2},{x,0}]},
          {move,{literal,"left balance**************\n"},{x,0}},
          {line,212},
          {call_ext,1,{extfunc,io,format,1}},
          {move,{atom,left},{x,0}},
          {deallocate,0},
          return,
          {label,276},
          {move,{atom,ok},{x,0}},
          {deallocate,0},
          return]},
     {function,balVal,2,278,
         [{line,213},
          {label,277},
          {func_info,{atom,adtgraph},{atom,balVal},2},
          {label,278},
          {line,214},
          {gc_bif,'-',{f,0},2,[{x,1},{x,0}],{x,0}},
          return]},
     {function,isEmptyBT,1,280,
         [{line,215},
          {label,279},
          {func_info,{atom,adtgraph},{atom,isEmptyBT},1},
          {label,280},
          {test,is_eq_exact,{f,281},[{x,0},{literal,{}}]},
          {move,{atom,true},{x,0}},
          return,
          {label,281},
          {move,{atom,false},{x,0}},
          return]},
     {function,neueHoehe,2,283,
         [{line,216},
          {label,282},
          {func_info,{atom,adtgraph},{atom,neueHoehe},2},
          {label,283},
          {allocate,1,2},
          {move,{x,1},{y,0}},
          {line,217},
          {call,1,{adtgraph,getHoehe,1}},
          {move,{x,0},{x,1}},
          {move,{y,0},{x,0}},
          {move,{x,1},{y,0}},
          {line,217},
          {call,1,{adtgraph,getHoehe,1}},
          {move,{x,0},{x,1}},
          {move,{y,0},{x,0}},
          {trim,1,0},
          {line,217},
          {call_ext,2,{extfunc,erlang,max,2}},
          {line,217},
          {gc_bif,'+',{f,0},1,[{x,0},{integer,1}],{x,0}},
          {deallocate,0},
          return]},
     {function,getHoehe,1,285,
         [{line,218},
          {label,284},
          {func_info,{atom,adtgraph},{atom,getHoehe},1},
          {label,285},
          {test,is_tuple,{f,284},[{x,0}]},
          {select_tuple_arity,{x,0},{f,284},{list,[5,{f,286},0,{f,287}]}},
          {label,286},
          {get_tuple_element,{x,0},1,{x,0}},
          return,
          {label,287},
          {move,{integer,0},{x,0}},
          return]},
     {function,appendSL,2,289,
         [{line,219},
          {label,288},
          {func_info,{atom,adtgraph},{atom,appendSL},2},
          {label,289},
          {allocate,1,2},
          {move,{x,1},{x,2}},
          {move,{x,0},{x,1}},
          {move,{x,2},{x,0}},
          {move,{x,0},{y,0}},
          {line,219},
          {call,2,{adtgraph,delSL,2}},
          {move,{y,0},{x,1}},
          {line,220},
          {call_ext_last,2,{extfunc,lists,merge,2},1}]},
     {function,putSL,2,291,
         [{line,221},
          {label,290},
          {func_info,{atom,adtgraph},{atom,putSL},2},
          {label,291},
          {test,is_nonempty_list,{f,292},[{x,0}]},
          {allocate,1,2},
          {get_list,{x,0},{x,0},{y,0}},
          {line,222},
          {call,2,{adtgraph,putSL,2}},
          {move,{x,0},{x,1}},
          {move,{y,0},{x,0}},
          {call_last,2,{adtgraph,putSL,2},1},
          {label,292},
          {test,is_nil,{f,293},[{x,0}]},
          {move,{x,1},{x,0}},
          return,
          {label,293},
          {test,is_nonempty_list,{f,296},[{x,1}]},
          {get_list,{x,1},{x,2},{x,3}},
          {test,is_lt,{f,294},[{x,2},{x,0}]},
          {allocate,1,4},
          {move,{x,3},{x,1}},
          {move,{x,2},{y,0}},
          {line,223},
          {call,2,{adtgraph,putSL,2}},
          {test_heap,2,1},
          {put_list,{y,0},{x,0},{x,0}},
          {deallocate,1},
          return,
          {label,294},
          {test,is_eq_exact,{f,295},[{x,2},{x,0}]},
          {test_heap,2,4},
          {put_list,{x,0},{x,3},{x,0}},
          return,
          {label,295},
          {test,is_lt,{f,290},[{x,0},{x,2}]},
          {test_heap,4,4},
          {put_list,{x,2},{x,3},{x,1}},
          {put_list,{x,0},{x,1},{x,0}},
          return,
          {label,296},
          {test,is_nil,{f,290},[{x,1}]},
          {test_heap,2,1},
          {put_list,{x,0},nil,{x,0}},
          return]},
     {function,delSL,2,298,
         [{line,224},
          {label,297},
          {func_info,{atom,adtgraph},{atom,delSL},2},
          {label,298},
          {test,is_nonempty_list,{f,299},[{x,0}]},
          {allocate,1,2},
          {get_list,{x,0},{x,0},{y,0}},
          {line,225},
          {call,2,{adtgraph,delSL,2}},
          {move,{x,0},{x,1}},
          {move,{y,0},{x,0}},
          {call_last,2,{adtgraph,delSL,2},1},
          {label,299},
          {test,is_nil,{f,300},[{x,0}]},
          {move,{x,1},{x,0}},
          return,
          {label,300},
          {test,is_nonempty_list,{f,303},[{x,1}]},
          {get_list,{x,1},{x,2},{x,3}},
          {test,is_lt,{f,301},[{x,0},{x,2}]},
          {test_heap,2,4},
          {put_list,{x,2},{x,3},{x,0}},
          return,
          {label,301},
          {test,is_eq_exact,{f,302},[{x,2},{x,0}]},
          {move,{x,3},{x,0}},
          return,
          {label,302},
          {test,is_lt,{f,297},[{x,2},{x,0}]},
          {allocate,1,4},
          {move,{x,3},{x,1}},
          {move,{x,2},{y,0}},
          {line,226},
          {call,2,{adtgraph,delSL,2}},
          {test_heap,2,1},
          {put_list,{y,0},{x,0},{x,0}},
          {deallocate,1},
          return,
          {label,303},
          {test,is_nil,{f,297},[{x,1}]},
          {move,nil,{x,0}},
          return]},
     {function,putAVL,2,305,
         [{line,227},
          {label,304},
          {func_info,{atom,adtgraph},{atom,putAVL},2},
          {label,305},
          {test,is_nonempty_list,{f,306},[{x,0}]},
          {get_list,{x,0},{x,2},{x,3}},
          {test,is_tuple,{f,304},[{x,2}]},
          {test,test_arity,{f,304},[{x,2},2]},
          {allocate_heap,3,3,4},
          {get_tuple_element,{x,2},0,{y,0}},
          {get_tuple_element,{x,2},1,{y,1}},
          {move,{x,3},{y,2}},
          {put_tuple,2,{x,0}},
          {put,{y,0}},
          {put,{y,1}},
          {line,228},
          {call,2,{adtgraph,delAVL,2}},
          {test_heap,5,1},
          {put_tuple,2,{x,2}},
          {put,{y,0}},
          {put,{y,1}},
          {put_list,{x,2},{x,0},{x,1}},
          {move,{y,2},{x,0}},
          {call_last,2,{adtgraph,putAVL,2},3},
          {label,306},
          {test,is_tuple,{f,307},[{x,0}]},
          {test,test_arity,{f,304},[{x,0},2]},
          {allocate_heap,2,3,2},
          {get_tuple_element,{x,0},0,{y,0}},
          {get_tuple_element,{x,0},1,{y,1}},
          {put_tuple,2,{x,0}},
          {put,{y,0}},
          {put,{y,1}},
          {line,229},
          {call,2,{adtgraph,delAVL,2}},
          {test_heap,5,1},
          {put_tuple,2,{x,1}},
          {put,{y,0}},
          {put,{y,1}},
          {put_list,{x,1},{x,0},{x,0}},
          {deallocate,2},
          return,
          {label,307},
          {test,is_nil,{f,304},[{x,0}]},
          {move,{x,1},{x,0}},
          return]},
     {function,delAVL,2,309,
         [{line,230},
          {label,308},
          {func_info,{atom,adtgraph},{atom,delAVL},2},
          {label,309},
          {test,is_nonempty_list,{f,310},[{x,0}]},
          {get_list,{x,0},{x,2},{x,3}},
          {test,is_tuple,{f,308},[{x,2}]},
          {test,test_arity,{f,308},[{x,2},2]},
          {allocate_heap,1,3,4},
          {get_tuple_element,{x,2},0,{x,4}},
          {get_tuple_element,{x,2},1,{x,5}},
          {move,{x,3},{y,0}},
          {put_tuple,2,{x,0}},
          {put,{x,4}},
          {put,{x,5}},
          {line,231},
          {call,2,{adtgraph,delAVL,2}},
          {move,{x,0},{x,1}},
          {move,{y,0},{x,0}},
          {call_last,2,{adtgraph,delAVL,2},1},
          {label,310},
          {test,is_tuple,{f,313},[{x,0}]},
          {test,test_arity,{f,308},[{x,0},2]},
          {get_tuple_element,{x,0},0,{x,2}},
          {get_tuple_element,{x,0},1,{x,3}},
          {test,is_nonempty_list,{f,312},[{x,1}]},
          {get_list,{x,1},{x,4},{x,5}},
          {test,is_tuple,{f,311},[{x,4}]},
          {test,test_arity,{f,311},[{x,4},2]},
          {get_tuple_element,{x,4},0,{x,6}},
          {test,is_eq_exact,{f,311},[{x,6},{x,2}]},
          {move,{x,5},{x,0}},
          return,
          {label,311},
          {allocate_heap,1,3,6},
          {move,{x,4},{y,0}},
          {put_tuple,2,{x,0}},
          {put,{x,2}},
          {put,{x,3}},
          {move,{x,5},{x,1}},
          {line,232},
          {call,2,{adtgraph,delAVL,2}},
          {test_heap,2,1},
          {put_list,{y,0},{x,0},{x,0}},
          {deallocate,1},
          return,
          {label,312},
          {test,is_nil,{f,308},[{x,1}]},
          {move,nil,{x,0}},
          return,
          {label,313},
          {test,is_nil,{f,308},[{x,0}]},
          {move,{x,1},{x,0}},
          return]},
     {function,putAVLT,2,315,
         [{line,233},
          {label,314},
          {func_info,{atom,adtgraph},{atom,putAVLT},2},
          {label,315},
          {test,is_nonempty_list,{f,316},[{x,0}]},
          {get_list,{x,0},{x,2},{x,3}},
          {test,is_tuple,{f,314},[{x,2}]},
          {test,test_arity,{f,314},[{x,2},3]},
          {allocate_heap,1,4,4},
          {get_tuple_element,{x,2},0,{x,4}},
          {get_tuple_element,{x,2},1,{x,5}},
          {get_tuple_element,{x,2},2,{x,6}},
          {move,{x,3},{y,0}},
          {put_tuple,3,{x,0}},
          {put,{x,4}},
          {put,{x,5}},
          {put,{x,6}},
          {line,234},
          {call,2,{adtgraph,putAVLT,2}},
          {move,{x,0},{x,1}},
          {move,{y,0},{x,0}},
          {call_last,2,{adtgraph,putAVLT,2},1},
          {label,316},
          {test,is_tuple,{f,317},[{x,0}]},
          {test,test_arity,{f,314},[{x,0},3]},
          {allocate_heap,3,4,2},
          {get_tuple_element,{x,0},0,{y,0}},
          {get_tuple_element,{x,0},1,{y,1}},
          {get_tuple_element,{x,0},2,{y,2}},
          {put_tuple,3,{x,0}},
          {put,{y,0}},
          {put,{y,1}},
          {put,{y,2}},
          {line,235},
          {call,2,{adtgraph,delAVLT,2}},
          {test_heap,6,1},
          {put_tuple,3,{x,1}},
          {put,{y,0}},
          {put,{y,1}},
          {put,{y,2}},
          {put_list,{x,1},{x,0},{x,0}},
          {deallocate,3},
          return,
          {label,317},
          {test,is_nil,{f,314},[{x,0}]},
          {move,{x,1},{x,0}},
          return]},
     {function,delAVLT,2,319,
         [{line,236},
          {label,318},
          {func_info,{atom,adtgraph},{atom,delAVLT},2},
          {label,319},
          {test,is_nonempty_list,{f,320},[{x,0}]},
          {allocate,1,2},
          {get_list,{x,0},{x,0},{y,0}},
          {line,237},
          {call,2,{adtgraph,delAVLT,2}},
          {move,{x,0},{x,1}},
          {move,{y,0},{x,0}},
          {call_last,2,{adtgraph,delAVLT,2},1},
          {label,320},
          {test,is_nil,{f,321},[{x,0}]},
          {move,{x,1},{x,0}},
          return,
          {label,321},
          {test,is_nil,{f,322},[{x,1}]},
          {move,nil,{x,0}},
          return,
          {label,322},
          {test,is_tuple,{f,325},[{x,0}]},
          {select_tuple_arity,{x,0},{f,325},{list,[1,{f,323},3,{f,324}]}},
          {label,323},
          {get_tuple_element,{x,0},0,{x,2}},
          {test,is_nonempty_list,{f,318},[{x,1}]},
          {get_list,{x,1},{x,3},{x,4}},
          {test,is_tuple,{f,325},[{x,3}]},
          {test,test_arity,{f,325},[{x,3},3]},
          {get_tuple_element,{x,3},0,{x,5}},
          {test,is_eq_exact,{f,325},[{x,5},{x,2}]},
          {test_heap,2,5},
          {put_tuple,1,{x,0}},
          {put,{x,2}},
          {move,{x,4},{x,1}},
          {call_only,2,{adtgraph,delAVLT,2}},
          {label,324},
          {get_tuple_element,{x,0},0,{x,2}},
          {get_tuple_element,{x,0},1,{x,3}},
          {test,is_nonempty_list,{f,318},[{x,1}]},
          {get_list,{x,1},{x,4},{x,5}},
          {test,is_tuple,{f,325},[{x,4}]},
          {test,test_arity,{f,325},[{x,4},3]},
          {get_tuple_element,{x,4},0,{x,6}},
          {get_tuple_element,{x,4},1,{x,7}},
          {test,is_eq_exact,{f,325},[{x,6},{x,2}]},
          {test,is_eq_exact,{f,325},[{x,7},{x,3}]},
          {move,{x,5},{x,0}},
          return,
          {label,325},
          {test,is_nonempty_list,{f,318},[{x,1}]},
          {allocate,1,2},
          {get_list,{x,1},{y,0},{x,1}},
          {line,238},
          {call,2,{adtgraph,delAVLT,2}},
          {test_heap,2,1},
          {put_list,{y,0},{x,0},{x,0}},
          {deallocate,1},
          return]},
     {function,minmaxGrad,1,327,
         [{line,239},
          {label,326},
          {func_info,{atom,adtgraph},{atom,minmaxGrad},1},
          {label,327},
          {test,is_atom,{f,328},[{x,0}]},
          {allocate,0,1},
          {move,{atom,d},{x,1}},
          {line,239},
          {call,2,{adtgraph,importG,2}},
          {call_last,1,{adtgraph,minmaxGrad,1},0},
          {label,328},
          {allocate,1,1},
          {move,{x,0},{y,0}},
          {line,240},
          {call,1,{adtgraph,getVertices,1}},
          {move,{atom,infinitely},{x,4}},
          {move,{integer,0},{x,3}},
          {move,{integer,0},{x,5}},
          {move,{atom,infinitely},{x,2}},
          {move,{atom,infinitely},{x,6}},
          {move,{x,0},{x,1}},
          {move,{integer,0},{x,7}},
          {move,{y,0},{x,0}},
          {call_last,8,{adtgraph,minmaxGrad,8},1}]},
     {function,minmaxGrad,8,330,
         [{line,241},
          {label,329},
          {func_info,{atom,adtgraph},{atom,minmaxGrad},8},
          {label,330},
          {test,is_nonempty_list,{f,343},[{x,1}]},
          {allocate,12,8},
          {init,{y,0}},
          {init,{y,1}},
          {init,{y,2}},
          {get_list,{x,1},{x,1},{y,11}},
          {move,{x,2},{y,3}},
          {move,{x,4},{y,4}},
          {move,{x,3},{y,5}},
          {move,{x,5},{y,6}},
          {move,{x,6},{y,7}},
          {move,{x,7},{y,8}},
          {move,{x,1},{y,9}},
          {move,{x,0},{y,10}},
          {line,242},
          {call,2,{adtgraph,getTarget,2}},
          {line,242},
          {gc_bif,length,{f,0},1,[{x,0}],{y,2}},
          {move,{y,9},{x,1}},
          {move,{y,10},{x,0}},
          {line,242},
          {call,2,{adtgraph,getSource,2}},
          {line,242},
          {gc_bif,length,{f,0},1,[{x,0}],{y,1}},
          {move,{y,9},{x,1}},
          {move,{y,10},{x,0}},
          {line,243},
          {call,2,{adtgraph,getAdjacent,2}},
          {line,243},
          {gc_bif,length,{f,0},1,[{x,0}],{y,0}},
          {test,is_lt,{f,331},[{y,1},{y,3}]},
          {test_heap,4,0},
          {put_list,{y,9},nil,{x,0}},
          {put_list,{y,1},{x,0},{x,1}},
          {init,{y,3}},
          {move,{literal,"Neues InMin ~p an Ecke ~p\n"},{x,0}},
          {line,244},
          {call_ext,2,{extfunc,io,format,2}},
          {move,{y,1},{x,1}},
          {jump,{f,332}},
          {label,331},
          {move,{y,3},{x,1}},
          {label,332},
          {move,{x,1},{y,3}},
          {test,is_lt,{f,333},[{y,2},{y,4}]},
          {test_heap,4,0},
          {put_list,{y,9},nil,{x,0}},
          {put_list,{y,2},{x,0},{x,1}},
          {init,{y,4}},
          {move,{literal,"Neues OutMin ~p an Ecke ~p\n"},{x,0}},
          {line,245},
          {call_ext,2,{extfunc,io,format,2}},
          {move,{y,2},{x,1}},
          {jump,{f,334}},
          {label,333},
          {move,{y,4},{x,1}},
          {label,334},
          {move,{x,1},{y,4}},
          {test,is_lt,{f,335},[{y,5},{y,1}]},
          {test_heap,4,0},
          {put_list,{y,9},nil,{x,0}},
          {put_list,{y,1},{x,0},{x,1}},
          {init,{y,5}},
          {move,{literal,"Neues InMax ~p an Ecke ~p\n"},{x,0}},
          {line,246},
          {call_ext,2,{extfunc,io,format,2}},
          {move,{y,1},{x,1}},
          {jump,{f,336}},
          {label,335},
          {move,{y,5},{x,1}},
          {label,336},
          {move,{x,1},{y,5}},
          {test,is_lt,{f,337},[{y,6},{y,2}]},
          {test_heap,4,0},
          {put_list,{y,9},nil,{x,0}},
          {put_list,{y,2},{x,0},{x,1}},
          {init,{y,1}},
          {init,{y,6}},
          {move,{literal,"Neues OutMax ~p an Ecke ~p\n"},{x,0}},
          {line,247},
          {call_ext,2,{extfunc,io,format,2}},
          {move,{y,2},{x,1}},
          {jump,{f,338}},
          {label,337},
          {move,{y,6},{x,1}},
          {label,338},
          {move,{x,1},{y,6}},
          {test,is_lt,{f,339},[{y,0},{y,7}]},
          {test_heap,4,0},
          {put_list,{y,9},nil,{x,0}},
          {put_list,{y,0},{x,0},{x,1}},
          {init,{y,1}},
          {init,{y,2}},
          {init,{y,7}},
          {move,{literal,"Neues Min ~p an Ecke ~p\n"},{x,0}},
          {line,248},
          {call_ext,2,{extfunc,io,format,2}},
          {move,{y,0},{x,1}},
          {jump,{f,340}},
          {label,339},
          {move,{y,7},{x,1}},
          {label,340},
          {move,{x,1},{y,7}},
          {test,is_lt,{f,341},[{y,8},{y,0}]},
          {test_heap,4,0},
          {put_list,{y,9},nil,{x,0}},
          {put_list,{y,0},{x,0},{x,1}},
          {init,{y,1}},
          {init,{y,2}},
          {init,{y,8}},
          {init,{y,9}},
          {move,{literal,"Neues Max ~p an Ecke ~p\n"},{x,0}},
          {line,249},
          {call_ext,2,{extfunc,io,format,2}},
          {move,{y,0},{x,1}},
          {jump,{f,342}},
          {label,341},
          {move,{y,8},{x,1}},
          {label,342},
          {move,{y,4},{x,4}},
          {move,{y,6},{x,5}},
          {move,{y,5},{x,3}},
          {move,{y,7},{x,6}},
          {move,{y,3},{x,2}},
          {move,{x,1},{x,7}},
          {move,{y,11},{x,1}},
          {move,{y,10},{x,0}},
          {call_last,8,{adtgraph,minmaxGrad,8},12},
          {label,343},
          {test,is_nil,{f,329},[{x,1}]},
          {test_heap,7,8},
          {put_tuple,6,{x,0}},
          {put,{x,2}},
          {put,{x,3}},
          {put,{x,4}},
          {put,{x,5}},
          {put,{x,6}},
          {put,{x,7}},
          return]},
     {function,module_info,0,345,
         [{line,0},
          {label,344},
          {func_info,{atom,adtgraph},{atom,module_info},0},
          {label,345},
          {move,{atom,adtgraph},{x,0}},
          {line,0},
          {call_ext_only,1,{extfunc,erlang,get_module_info,1}}]},
     {function,module_info,1,347,
         [{line,0},
          {label,346},
          {func_info,{atom,adtgraph},{atom,module_info},1},
          {label,347},
          {move,{x,0},{x,1}},
          {move,{atom,adtgraph},{x,0}},
          {line,0},
          {call_ext_only,2,{extfunc,erlang,get_module_info,2}}]}]}.\n